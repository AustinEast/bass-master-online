// Generated by Haxe 4.3.6
(function ($hx_exports, $global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class Game {
	constructor() {
		this.fish_count = 0;
		this.max_fish = 4;
		this.bobber_speed = 400;
		this.player_speed = 200;
	}
	process_message(message,entity,state) {
		if(entity == null) {
			return;
		}
		if(message.mouse != null) {
			let mouse = zero_utilities_Vec2.get(message.x,message.y);
			let pos = zero_utilities_Vec2.get(entity.x,entity.y);
			switch(message.mouse) {
			case "jp":
				if(entity.state == 0) {
					let cx = zero_utilities_Vec2.get_x(pos);
					let cy = zero_utilities_Vec2.get_y(pos);
					if(Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(mouse) - cx,2) + Math.pow(zero_utilities_Vec2.get_y(mouse) - cy,2)) <= 16) {
						entity.state = 1;
						let angle = (Math.atan2(zero_utilities_Vec2.get_y(pos) - zero_utilities_Vec2.get_y(mouse),zero_utilities_Vec2.get_x(pos) - zero_utilities_Vec2.get_x(mouse)) * (180 / Math.PI) | 0) - 180;
						entity.rotation = angle;
					}
				} else if(entity.state == 3 || entity.state == 2) {
					let bobber = state.entities[entity.child];
					if(bobber != null) {
						entity.state = 4;
						bobber.target_x = entity.x;
						bobber.target_y = entity.y;
						bobber.state = 3;
						let fish = state.entities[bobber.child];
						if(fish != null) {
							if(fish.state == 2) {
								entity.state = 5;
								fish.state = 3;
								fish.target_x = entity.x;
								fish.target_y = entity.y;
								fish.parent = entity.id;
							}
						}
					}
				}
				break;
			case "jr":
				if(entity.state == 0) {
					entity.targets.length = 0;
					let start = zero_utilities_IntPoint.get(zero_utilities_Vec2.get_x(pos) / state.world.tile_width | 0,zero_utilities_Vec2.get_y(pos) / state.world.tile_height | 0);
					let end = zero_utilities_IntPoint.get(zero_utilities_Vec2.get_x(mouse) / state.world.tile_width | 0,zero_utilities_Vec2.get_y(mouse) / state.world.tile_height | 0);
					let path = zero_utilities_AStar.get_path(this.map,{ start : start, end : end, passable : [1], mode : zero_utilities_EAStarMode.DIAGONAL});
					if(path.length > 0) {
						let _g = 0;
						while(_g < path.length) {
							let node = path[_g];
							++_g;
							let point = state.createPoint(node[0] * state.world.tile_width + state.world.tile_width * 0.5,node[1] * state.world.tile_height + state.world.tile_height * 0.5);
							entity.targets.push(point);
						}
						let node = entity.targets.shift();
						entity.target_x = node.x;
						entity.target_y = node.y;
					} else {
						entity.target_x = zero_utilities_Vec2.get_x(mouse);
						entity.target_y = zero_utilities_Vec2.get_y(mouse);
					}
				} else if(entity.state == 1) {
					entity.rotation = Math.atan2(zero_utilities_Vec2.get_y(pos) - zero_utilities_Vec2.get_y(mouse),zero_utilities_Vec2.get_x(pos) - zero_utilities_Vec2.get_x(mouse)) * (180 / Math.PI) | 0;
					let bobber = state.createEntity(Util.uuid(),2);
					bobber.x = entity.x;
					bobber.y = entity.y;
					let pos1 = zero_utilities_Vec2.get(entity.x,entity.y);
					let angle = Math.atan2(zero_utilities_Vec2.get_y(mouse) - zero_utilities_Vec2.get_y(pos1),zero_utilities_Vec2.get_x(mouse) - zero_utilities_Vec2.get_x(pos1)) * (180 / Math.PI);
					let distance = Math.min(Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(pos1) - zero_utilities_Vec2.get_x(mouse),2) + Math.pow(zero_utilities_Vec2.get_y(pos1) - zero_utilities_Vec2.get_y(mouse),2)),72) * 2;
					let a = angle - 180;
					let aim_pos = zero_utilities_Vec2.add(zero_utilities_Vec2.get(Math.cos(a * (Math.PI / 180)) * distance,Math.sin(a * (Math.PI / 180)) * distance),pos1);
					bobber.target_x = zero_utilities_Vec2.get_x(aim_pos);
					bobber.target_y = zero_utilities_Vec2.get_y(aim_pos);
					bobber.parent = entity.id;
					entity.state = 2;
					entity.child = bobber.id;
				}
				break;
			case "p":
				if(entity.state == 1) {
					let angle = Math.atan2(zero_utilities_Vec2.get_y(pos) - zero_utilities_Vec2.get_y(mouse),zero_utilities_Vec2.get_x(pos) - zero_utilities_Vec2.get_x(mouse)) * (180 / Math.PI) | 0;
					if(entity.rotation != angle) {
						entity.rotation = angle;
					}
				}
				break;
			}
			mouse = [];
			zero_utilities_Vec2.pool.push(mouse);
			pos = [];
			zero_utilities_Vec2.pool.push(pos);
		}
	}
	update(dt,state) {
		let _gthis = this;
		state.forEachEntity(function(entity) {
			if(entity.timer > 0.) {
				entity.timer -= dt;
			}
			let entity_pos = zero_utilities_Vec2.get(entity.x,entity.y);
			switch(entity.type) {
			case 0:
				if(entity.state == 0) {
					_gthis.move_entity_to_target(dt,entity,state);
				}
				break;
			case 1:
				switch(entity.state) {
				case 0:
					if(_gthis.move_entity_to_target(dt,entity,state) && entity.timer < 0) {
						let found = false;
						state.forEachEntity(function(bobber) {
							if(found || bobber.type != 2 || bobber.child != null) {
								return;
							}
							let bobber_pos = zero_utilities_Vec2.get(bobber.x,bobber.y);
							if(Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(entity_pos) - zero_utilities_Vec2.get_x(bobber_pos),2) + Math.pow(zero_utilities_Vec2.get_y(entity_pos) - zero_utilities_Vec2.get_y(bobber_pos),2)) < 40) {
								entity.state = 1;
								entity.target_x = bobber.x;
								entity.target_y = bobber.y;
								entity.parent = bobber.id;
								bobber.child = entity.id;
								found = true;
							}
							bobber_pos = [];
							zero_utilities_Vec2.pool.push(bobber_pos);
						});
						if(!found) {
							let i_x = zero_utilities_Vec2.get_x(entity_pos) / state.world.tile_width | 0;
							let i_y = zero_utilities_Vec2.get_y(entity_pos) / state.world.tile_height | 0;
							zero_extensions_ArrayExt.shuffle(Util.directions);
							let _g = 0;
							let _g1 = Util.directions;
							while(_g < _g1.length) {
								let direction = _g1[_g];
								++_g;
								if(zero_extensions_ArrayExt.get_xy(_gthis.map,i_x + direction[0],i_y + direction[1]) == 0) {
									entity.target_x = (i_x + direction[0]) * state.world.tile_width + state.world.tile_width * 0.5;
									entity.target_y = (i_y + direction[1]) * state.world.tile_height + state.world.tile_height * 0.5;
									break;
								}
							}
							let tmp = Math.random() * 5;
							entity.timer = 3 + tmp;
						}
					}
					break;
				case 1:
					if(_gthis.move_entity_to_target(dt,entity,state)) {
						let bobber = state.entities[entity.parent];
						if(bobber != null) {
							entity.timer = 1;
							entity.state = 2;
						}
					}
					break;
				case 2:
					if(_gthis.move_entity_to_target(dt,entity,state) && entity.timer < 0) {
						state.removeEntity(entity.id);
						_gthis.fish_count--;
					}
					break;
				case 3:
					if(_gthis.move_entity_to_target(dt,entity,state)) {
						state.removeEntity(entity.id);
						_gthis.fish_count--;
						let parent = state.entities[entity.parent];
						if(parent != null) {
							parent.weight += entity.weight;
							parent.state = 0;
						}
					}
					break;
				}
				break;
			case 2:
				let parent = state.entities[entity.parent];
				if(parent == null) {
					state.removeEntity(entity.id);
					return;
				}
				if(entity.state == 0) {
					if(_gthis.move_entity_to_target(dt,entity,state)) {
						let w = state.world;
						if(entity.x > 0 && entity.x < w.width && entity.y < w.height && entity.y > 0 && zero_extensions_ArrayExt.get_xy(_gthis.map,entity.x / w.tile_width | 0,entity.y / w.tile_height | 0) == 1) {
							entity.target_x = parent.x;
							entity.target_y = parent.y;
							entity.state = 3;
							parent.state = 4;
						} else {
							entity.state = 1;
							parent.state = 3;
						}
					}
				} else if(entity.state == 3) {
					if(_gthis.move_entity_to_target(dt,entity,state)) {
						state.removeEntity(entity.id);
						if(parent.state == 4) {
							parent.state = 0;
						}
					}
				}
				break;
			}
		});
	}
	check_fish(state) {
		if(this.fish_count < this.max_fish) {
			let def_max = this.fish_positions.length - 1;
			let max = null;
			let pos = this.fish_positions[Math.random() * (max == null ? def_max : max) | 0];
			this.fish_count++;
			let fish = state.createEntity(Util.uuid(),1);
			fish.x = zero_utilities_Vec2.get_x(pos);
			fish.y = zero_utilities_Vec2.get_y(pos);
			fish.rotation = Math.random() * 360;
			fish.target_x = fish.x;
			fish.target_y = fish.y;
			fish.timer = 3 + Math.random() * 3;
			fish.weight = 1;
		}
	}
	generate_map(width,height,tile_width,tile_height) {
		this.map = Util.generate_map(width,height,tile_width,tile_height);
		this.fish_positions = [];
		this.player_positions = [];
		let _g = 0;
		let _g1 = this.map.length;
		while(_g < _g1) {
			let y = _g++;
			let _g1 = 0;
			let _g2 = this.map[y].length;
			while(_g1 < _g2) {
				let x = _g1++;
				let index = zero_extensions_ArrayExt.get_xy(this.map,x,y);
				if(index == 0 && Util.surrounding_tiles_match(this.map,index,x,y)) {
					this.fish_positions.push(zero_utilities_Vec2.get(x * tile_width + tile_width * 0.5,y * tile_height + tile_height * 0.5));
				} else if(index == 1 && Util.surrounding_tiles_match(this.map,index,x,y)) {
					this.player_positions.push(zero_utilities_Vec2.get(x * tile_width + tile_width * 0.5,y * tile_height + tile_height * 0.5));
				}
			}
		}
		let a = this.map;
		let _g2 = [];
		let _g3 = 0;
		while(_g3 < a.length) {
			let row = a[_g3];
			++_g3;
			let _g = 0;
			while(_g < row.length) {
				let e = row[_g];
				++_g;
				_g2.push(e);
			}
		}
		return _g2;
	}
	place_entity(entity) {
		let def_max = this.player_positions.length - 1;
		let max = null;
		let pos = this.player_positions[Math.random() * (max == null ? def_max : max) | 0];
		entity.target_x = entity.x = zero_utilities_Vec2.get_x(pos);
		entity.target_y = entity.y = zero_utilities_Vec2.get_y(pos);
	}
	move_entity_to_target(dt,entity,state) {
		if(entity == null) {
			return false;
		}
		let entity_pos = zero_utilities_Vec2.get(entity.x,entity.y);
		let target_pos = zero_utilities_Vec2.get(entity.target_x,entity.target_y);
		if(zero_utilities_Vec2.is_equal(entity_pos,target_pos) && entity.targets.length == 0) {
			entity_pos = [];
			zero_utilities_Vec2.pool.push(entity_pos);
			target_pos = [];
			zero_utilities_Vec2.pool.push(target_pos);
			return true;
		}
		let distance = Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(entity_pos) - zero_utilities_Vec2.get_x(target_pos),2) + Math.pow(zero_utilities_Vec2.get_y(entity_pos) - zero_utilities_Vec2.get_y(target_pos),2));
		if(distance < 4) {
			entity_pos = [];
			zero_utilities_Vec2.pool.push(entity_pos);
			target_pos = [];
			zero_utilities_Vec2.pool.push(target_pos);
			if(entity.targets.length > 0) {
				let target = entity.targets.shift();
				entity.target_x = target.x;
				entity.target_y = target.y;
				return false;
			} else {
				entity.target_x = entity.x;
				entity.target_y = entity.y;
				return true;
			}
		} else {
			let velocity = zero_utilities_Vec2.get(0,1);
			zero_utilities_Vec2.set_radians(velocity,Math.atan2(zero_utilities_Vec2.get_y(target_pos) - zero_utilities_Vec2.get_y(entity_pos),zero_utilities_Vec2.get_x(target_pos) - zero_utilities_Vec2.get_x(entity_pos)));
			let tmp;
			switch(entity.type) {
			case 0:
				tmp = this.player_speed;
				break;
			case 1:
				tmp = entity.state == 3 ? this.bobber_speed : this.player_speed;
				break;
			case 2:
				tmp = this.bobber_speed;
				break;
			}
			zero_utilities_Vec2.set_length(velocity,dt * tmp);
			entity.x += zero_utilities_Vec2.get_x(velocity);
			entity.y += zero_utilities_Vec2.get_y(velocity);
			entity.rotation = zero_utilities_Vec2.get_angle(velocity);
			entity_pos = [];
			zero_utilities_Vec2.pool.push(entity_pos);
			target_pos = [];
			zero_utilities_Vec2.pool.push(target_pos);
			velocity = [];
			zero_utilities_Vec2.pool.push(velocity);
			return false;
		}
	}
}
$hx_exports["Game"] = Game;
Game.__name__ = true;
Math.__name__ = true;
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
	static parseInt(x) {
		let v = parseInt(x);
		if(isNaN(v)) {
			return null;
		}
		return v;
	}
}
Std.__name__ = true;
class StringTools {
	static hex(n,digits) {
		let s = "";
		let hexChars = "0123456789ABCDEF";
		do {
			s = hexChars.charAt(n & 15) + s;
			n >>>= 4;
		} while(n > 0);
		if(digits != null) {
			while(s.length < digits) s = "0" + s;
		}
		return s;
	}
}
StringTools.__name__ = true;
class GState {
	constructor(entities,time) {
		this.entities = entities;
		this.time = time;
	}
}
GState.__name__ = true;
class EntityState {
	constructor(id,x,y,rotation) {
		this.id = id;
		this.x = x;
		this.y = y;
		this.rotation = rotation;
	}
}
EntityState.__name__ = true;
class zero_utilities_IntPoint {
	static from_array_int(input) {
		return zero_utilities_IntPoint.get(input[0],input[1]);
	}
	static arr_set(this1,n,v) {
		if(n < 0 || n > 1) {
			return;
		} else {
			this1[n] = v;
		}
	}
	static arr_get(this1,n) {
		return this1[Math.floor(Math.max(Math.min(n,1),0))];
	}
	static get(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(zero_utilities_IntPoint.pool != null && zero_utilities_IntPoint.pool.length > 0) {
			let this1 = zero_utilities_IntPoint.pool.shift();
			let x1 = x;
			let y1 = y;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			this1[0] = x1;
			this1[1] = y1;
			return this1;
		} else {
			let x1 = x;
			let y1 = y;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			return [x1,y1];
		}
	}
	static put(this1) {
		zero_utilities_IntPoint.pool.push(this1);
		this1 = null;
	}
	static _new(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		return [x,y];
	}
	static set(this1,x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = x;
		this1[1] = y;
		return this1;
	}
	static get_x(this1) {
		return this1[0];
	}
	static set_x(this1,v) {
		return this1[0] = v;
	}
	static get_y(this1) {
		return this1[1];
	}
	static set_y(this1,v) {
		return this1[1] = v;
	}
	static get_length(this1) {
		return Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1]);
	}
	static get_angle(this1) {
		return (Math.atan2(this1[1],this1[0]) * (180 / Math.PI) % 360 + 360) % 360;
	}
	static copy_from(this1,p) {
		let x = p[0];
		let y = p[1];
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = x;
		this1[1] = y;
		return this1;
	}
	static copy(this1) {
		return zero_utilities_IntPoint.get(this1[0],this1[1]);
	}
	static equals(this1,p) {
		if(this1[0] == p[0]) {
			return this1[1] == p[1];
		} else {
			return false;
		}
	}
	static distance(this1,p) {
		let this2 = zero_utilities_IntPoint.subtract(p,zero_utilities_IntPoint.from_array_int(this1));
		return Math.sqrt(this2[0] * this2[0] + this2[1] * this2[1]);
	}
	static toString(this1) {
		return "x: " + this1[0] + " | y: " + this1[1];
	}
	static add(v1,v2) {
		return zero_utilities_IntPoint.get(v1[0] + v2[0],v1[1] + v2[1]);
	}
	static add_int(v,n) {
		return zero_utilities_IntPoint.get(v[0] + n,v[1] + n);
	}
	static subtract(v1,v2) {
		return zero_utilities_IntPoint.get(v1[0] - v2[0],v1[1] - v2[1]);
	}
	static subtract_int(v,n) {
		return zero_utilities_IntPoint.get(v[0] - n,v[1] - n);
	}
	static multiply(v1,v2) {
		return zero_utilities_IntPoint.get(v1[0] * v2[0],v1[1] * v2[1]);
	}
	static multiply_int(v,n) {
		return zero_utilities_IntPoint.get(v[0] * n,v[1] * n);
	}
	static mod(v1,v2) {
		return zero_utilities_IntPoint.get(v1[0] % v2[0],v1[1] % v2[1]);
	}
	static mod_int(v,n) {
		return zero_utilities_IntPoint.get(v[0] % n,v[1] % n);
	}
}
class Util {
	static uuid() {
		let uid_b = "";
		let a = 8;
		uid_b += Std.string(StringTools.hex(new Date().getTime() | 0,8));
		while(a++ < 36) uid_b += Std.string((a * 51 & 52) != 0 ? StringTools.hex((a ^ 15) != 0 ? 8 ^ (Math.random() * ((a ^ 20) != 0 ? 16 : 4) | 0) : 4) : "-");
		return uid_b.toLowerCase();
	}
	static in_circle(p,c,r) {
		return Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(p) - zero_utilities_Vec2.get_x(c),2) + Math.pow(zero_utilities_Vec2.get_y(p) - zero_utilities_Vec2.get_y(c),2)) < r;
	}
	static rad_between(v1,v2) {
		return Math.atan2(zero_utilities_Vec2.get_y(v2) - zero_utilities_Vec2.get_y(v1),zero_utilities_Vec2.get_x(v2) - zero_utilities_Vec2.get_x(v1));
	}
	static set_rect(arr,x,y,width,height,index) {
		let _g = 0;
		let _g1 = arr.length;
		while(_g < _g1) {
			let row = _g++;
			if(row >= y && row <= y + height) {
				let _g = 0;
				let _g1 = arr[row].length;
				while(_g < _g1) {
					let col = _g++;
					if(col >= x && col <= x + width) {
						arr[row][col] = index;
					}
				}
			}
		}
	}
	static set_circle(arr,x,y,radius,index) {
		let _g = 0;
		let _g1 = arr.length;
		while(_g < _g1) {
			let row = _g++;
			let _g1 = 0;
			let _g2 = arr[row].length;
			while(_g1 < _g2) {
				let col = _g1++;
				if((col - x) * (col - x) + (row - y) * (row - y) <= radius * radius) {
					arr[row][col] = index;
				}
			}
		}
	}
	static surrounding_tiles_match(arr,index,x,y) {
		let _g = 0;
		let _g1 = Util.directions;
		while(_g < _g1.length) {
			let direction = _g1[_g];
			++_g;
			let tile = zero_extensions_ArrayExt.get_xy(arr,x + direction[0],y + direction[1]);
			if(tile == null || tile != index) {
				return false;
			}
		}
		return true;
	}
	static generate_map(width,height,tile_width,tile_height) {
		let width_in_tiles = width / tile_width;
		let height_in_tiles = height / tile_height;
		let _g = [];
		let _g1 = 0;
		let _g2 = height_in_tiles | 0;
		while(_g1 < _g2) {
			let y = _g1++;
			let _g2 = [];
			let _g3 = 0;
			let _g4 = width_in_tiles | 0;
			while(_g3 < _g4) {
				let x = _g3++;
				_g2.push(1);
			}
			_g.push(_g2);
		}
		let map = _g;
		let center = zero_utilities_IntPoint.get(width_in_tiles * 0.5 | 0,height_in_tiles * 0.5 | 0);
		let _g3 = 0;
		while(_g3 < 6) {
			let i = _g3++;
			let min = 8;
			let max = null;
			if(min == null) {
				min = 0;
			}
			let ran_r = min + Math.random() * ((max == null ? 4 : max) - min) | 0;
			let min1 = center[0] + 6;
			let max1 = null;
			if(min1 == null) {
				min1 = 0;
			}
			let ran_x = min1 + Math.random() * ((max1 == null ? center[0] - 6 : max1) - min1) | 0;
			let min2 = center[1] + 6;
			let max2 = null;
			if(min2 == null) {
				min2 = 0;
			}
			let ran_y = min2 + Math.random() * ((max2 == null ? center[1] - 6 : max2) - min2) | 0;
			let _g = 0;
			let _g1 = map.length;
			while(_g < _g1) {
				let row = _g++;
				let _g1 = 0;
				let _g2 = map[row].length;
				while(_g1 < _g2) {
					let col = _g1++;
					if((col - ran_x) * (col - ran_x) + (row - ran_y) * (row - ran_y) <= ran_r * ran_r) {
						map[row][col] = 0;
					}
				}
			}
		}
		let tree_count = 15;
		let rock_count = 15;
		let _g4 = 0;
		let _g5 = tree_count;
		while(_g4 < _g5) {
			let i = _g4++;
			let min = 1;
			let max = null;
			if(min == null) {
				min = 0;
			}
			let x = min + Math.random() * ((max == null ? width_in_tiles - 1 : max) - min) | 0;
			let min1 = 1;
			let max1 = null;
			if(min1 == null) {
				min1 = 0;
			}
			let y = min1 + Math.random() * ((max1 == null ? height_in_tiles - 1 : max1) - min1) | 0;
			if(zero_extensions_ArrayExt.get_xy(map,x,y) != 1) {
				continue;
			}
			zero_extensions_ArrayExt.set_xy(map,x,y,2);
		}
		let _g6 = 0;
		let _g7 = rock_count;
		while(_g6 < _g7) {
			let i = _g6++;
			let min = 1;
			let max = null;
			if(min == null) {
				min = 0;
			}
			let x = min + Math.random() * ((max == null ? width_in_tiles - 1 : max) - min) | 0;
			let min1 = 1;
			let max1 = null;
			if(min1 == null) {
				min1 = 0;
			}
			let y = min1 + Math.random() * ((max1 == null ? height_in_tiles - 1 : max1) - min1) | 0;
			if(zero_extensions_ArrayExt.get_xy(map,x,y) != 1) {
				continue;
			}
			zero_extensions_ArrayExt.set_xy(map,x,y,3);
		}
		return map;
	}
}
Util.__name__ = true;
class haxe_ds_StringMap {
	constructor() {
		this.h = Object.create(null);
	}
}
haxe_ds_StringMap.__name__ = true;
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
haxe_iterators_ArrayIterator.__name__ = true;
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		let t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				let e = $hxEnums[o.__enum__];
				let con = e.__constructs__[o._hx_index];
				let n = con._hx_name;
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						let _g = [];
						{
							let _g1 = 0;
							let _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								let p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				let str = "[";
				s += "\t";
				let _g = 0;
				let _g1 = o.length;
				while(_g < _g1) {
					let i = _g++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			let tostr;
			try {
				tostr = o.toString;
			} catch( _g ) {
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				let s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			let str = "{\n";
			s += "\t";
			let hasp = o.hasOwnProperty != null;
			let k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str.length != 2) {
				str += ", \n";
			}
			str += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str += "\n" + s + "}";
			return str;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
class zero_extensions_ArrayExt {
	static strings_to_ints(array) {
		let _g = [];
		let _g1 = 0;
		while(_g1 < array.length) {
			let s = array[_g1];
			++_g1;
			_g.push(Std.parseInt(s));
		}
		return _g;
	}
	static strings2D_to_ints(array) {
		let _g = [];
		let _g1 = 0;
		while(_g1 < array.length) {
			let row = array[_g1];
			++_g1;
			let _g2 = [];
			let _g3 = 0;
			while(_g3 < row.length) {
				let s = row[_g3];
				++_g3;
				_g2.push(Std.parseInt(s));
			}
			_g.push(_g2);
		}
		return _g;
	}
	static last(a) {
		return a[a.length - 1];
	}
	static get_random(array) {
		let def_max = array.length;
		let max = null;
		return array[Math.random() * (max == null ? def_max : max) | 0];
	}
	static shuffle(array) {
		let _g = 0;
		let _g1 = array.length;
		while(_g < _g1) {
			let i = _g++;
			let def_max = array.length;
			let max = null;
			let j = Math.random() * (max == null ? def_max : max) | 0;
			let a = array[i];
			let b = array[j];
			array[i] = b;
			array[j] = a;
		}
		return array;
	}
	static merge(a1,a2) {
		let _g = 0;
		while(_g < a2.length) {
			let o = a2[_g];
			++_g;
			a1.push(o);
		}
		return a1;
	}
	static flatten(a) {
		let _g = [];
		let _g1 = 0;
		while(_g1 < a.length) {
			let row = a[_g1];
			++_g1;
			let _g2 = 0;
			while(_g2 < row.length) {
				let e = row[_g2];
				++_g2;
				_g.push(e);
			}
		}
		return _g;
	}
	static expand(a,row_width) {
		let out = [];
		let _g = 0;
		let _g1 = a.length;
		while(_g < _g1) {
			let i = _g++;
			if(i % row_width == 0) {
				out.push([]);
			}
			out[out.length - 1].push(a[i]);
		}
		return out;
	}
	static flood_fill_2D(array,x,y,value) {
		if(x < 0 || y < 0 || y >= array.length || x >= array[y].length) {
			return;
		}
		let target_value = array[y][x];
		let validate = function(x,y) {
			if(!(x < 0 || y < 0 || y >= array.length || x >= array[y].length)) {
				return array[y][x] == target_value;
			} else {
				return false;
			}
		};
		let queue = [{ x : x, y : y}];
		while(queue.length > 0) {
			let point = queue.shift();
			array[point.y][point.x] = value;
			if(validate(point.x,point.y - 1)) {
				queue.push({ x : point.x, y : point.y - 1});
			}
			if(validate(point.x,point.y + 1)) {
				queue.push({ x : point.x, y : point.y + 1});
			}
			if(validate(point.x - 1,point.y)) {
				queue.push({ x : point.x - 1, y : point.y});
			}
			if(validate(point.x + 1,point.y)) {
				queue.push({ x : point.x + 1, y : point.y});
			}
		}
	}
	static flood_fill_1D(array,pos,value) {
		if(pos < 0 || pos > array.length) {
			return;
		}
		let target_value = array[pos];
		let validate = function(pos) {
			if(!(pos < 0 || pos > array.length)) {
				return array[pos] == target_value;
			} else {
				return false;
			}
		};
		let queue = [pos];
		while(queue.length > 0) {
			let pos = queue.shift();
			array[pos] = value;
			if(validate(pos - 1)) {
				queue.push(pos - 1);
			}
			if(validate(pos + 1)) {
				queue.push(pos + 1);
			}
		}
	}
	static heat_map(array,x,y,max_value) {
		if(max_value == null) {
			max_value = -1;
		}
		if(x < 0 || y < 0 || y >= array.length || x >= array[y].length) {
			return [];
		}
		let value = -1;
		let _g = [];
		let _g1 = 0;
		while(_g1 < array.length) {
			let row = array[_g1];
			++_g1;
			let _g2 = [];
			let _g3 = 0;
			while(_g3 < row.length) {
				let v = row[_g3];
				++_g3;
				_g2.push(0);
			}
			_g.push(_g2);
		}
		let map = _g;
		let min = 0;
		let target_value = array[y][x];
		let validate = function(x,y) {
			if(!(x < 0 || y < 0 || y >= array.length || x >= array[y].length) && array[y][x] == target_value) {
				return map[y][x] == 0;
			} else {
				return false;
			}
		};
		let queue = [{ x : x, y : y, value : value}];
		while(queue.length > 0) {
			let point = queue.shift();
			map[point.y][point.x] = point.value;
			min = Math.round(Math.min(point.value,min));
			if(validate(point.x,point.y - 1)) {
				queue.push({ x : point.x, y : point.y - 1, value : point.value - 1});
			}
			if(validate(point.x,point.y + 1)) {
				queue.push({ x : point.x, y : point.y + 1, value : point.value - 1});
			}
			if(validate(point.x - 1,point.y)) {
				queue.push({ x : point.x - 1, y : point.y, value : point.value - 1});
			}
			if(validate(point.x + 1,point.y)) {
				queue.push({ x : point.x + 1, y : point.y, value : point.value - 1});
			}
		}
		let diff = max_value < 0 ? -min + 1 : -min + 1 - (-min - max_value);
		let _g2 = 0;
		let _g3 = map.length;
		while(_g2 < _g3) {
			let j = _g2++;
			let _g = 0;
			let _g1 = map[j].length;
			while(_g < _g1) {
				let i = _g++;
				if(map[j][i] != 0) {
					map[j][i] = Math.round(Math.max(map[j][i] + diff,0));
				}
			}
		}
		return map;
	}
	static get_xy(array,x,y) {
		y = Math.floor(Math.min(Math.max(y,0),array.length - 1));
		x = Math.floor(Math.min(Math.max(x,0),array[y].length - 1));
		return array[y][x];
	}
	static set_xy(array,x,y,value) {
		y = Math.floor(Math.min(Math.max(y,0),array.length - 1));
		x = Math.floor(Math.min(Math.max(x,0),array[y].length - 1));
		array[y][x] = value;
	}
	static median(array) {
		return array[Math.floor(array.length * 0.5)];
	}
	static equals(a1,a2) {
		if(a1.length != a2.length) {
			return false;
		}
		let _g = 0;
		let _g1 = a1.length;
		while(_g < _g1) {
			let i = _g++;
			if(a1[i] != a2[i]) {
				return false;
			}
		}
		return true;
	}
	static remove_duplicates(arr) {
		let unique = [];
		let _g = 0;
		while(_g < arr.length) {
			let item = arr[_g];
			++_g;
			if(unique.indexOf(item) < 0) {
				unique.push(item);
			}
		}
		arr = unique;
		return arr;
	}
	static chunk(arr,x,y,w,h) {
		if(arr.length < y + h || arr[0].length < x + w || x < 0 || y < 0) {
			return [];
		}
		let _g = [];
		let _g1 = 0;
		let _g2 = h;
		while(_g1 < _g2) {
			let j = _g1++;
			_g.push([]);
		}
		let out = _g;
		let _g3 = 0;
		let _g4 = h;
		while(_g3 < _g4) {
			let j = _g3++;
			let _g = 0;
			let _g1 = w;
			while(_g < _g1) {
				let i = _g++;
				out[j][i] = arr[y + j][x + i];
			}
		}
		return out;
	}
	static fill(arr,v) {
		let _g = 0;
		let _g1 = arr.length;
		while(_g < _g1) {
			let j = _g++;
			let _g1 = 0;
			let _g2 = arr[j].length;
			while(_g1 < _g2) {
				let i = _g1++;
				arr[j][i] = v;
			}
		}
	}
	static push_multi(arr,...values) {
		let _g_current = 0;
		let _g_args = values;
		while(_g_current < _g_args.length) {
			let value = _g_args[_g_current++];
			arr.push(value);
		}
	}
}
zero_extensions_ArrayExt.__name__ = true;
class zero_extensions_FloatExt {
	static rad_to_deg(rad) {
		return rad * (180 / Math.PI);
	}
	static deg_to_rad(deg) {
		return deg * (Math.PI / 180);
	}
	static cycle(n,min,max) {
		return ((n - min) % (max - min) + (max - min)) % (max - min) + min;
	}
	static get_relative_degree(n) {
		return (n % 360 + 360) % 360;
	}
	static translate_to_nearest_angle(a1,a2) {
		while(Math.abs(a1 - a2) > 180) {
			let n = a1 - a2;
			a1 -= (n > 0 ? 1 : n < 0 ? -1 : 0) * 360;
		}
		return a1;
	}
	static degrees_between(a1,a2) {
		return Math.abs((Math.max(a2 - a1,a1 - a2) + 180) % 360 - 180);
	}
	static clamp(n,min,max) {
		return Math.min(Math.max(n,min),max);
	}
	static normalize(n,places) {
		return Math.round(n * Math.pow(10,places)) / Math.pow(10,places);
	}
	static norm(t,a,b) {
		return (t - a) / (b - a);
	}
	static lerp(t,a,b) {
		return (1 - t) * a + t * b;
	}
	static map(t,a0,b0,a1,b1) {
		let t1 = (t - a0) / (b0 - a0);
		return (1 - t1) * a1 + t1 * b1;
	}
	static snap_to_grid(n,grid_size,offset,floor) {
		if(floor == null) {
			floor = false;
		}
		if(offset == null) {
			offset = 0;
		}
		return offset + grid_size * (floor ? Math.floor(n / grid_size) : Math.round(n / grid_size));
	}
	static get_random(def_max,min,max,iterations) {
		if(iterations == null) {
			iterations = 1;
		}
		if(min == null) {
			min = 0;
		}
		return min + Math.random() * ((max == null ? def_max : max) - min);
	}
	static get_random_gaussian(max,min,iterations) {
		if(iterations == null) {
			iterations = 2;
		}
		if(min == null) {
			min = 0;
		}
		let r = 0.0;
		let _g = 0;
		let _g1 = iterations;
		while(_g < _g1) {
			let i = _g++;
			r += Math.random();
		}
		r /= iterations;
		return min + r * (max - min);
	}
	static sign_of(n) {
		if(n > 0) {
			return 1;
		} else if(n < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	static to_int(n) {
		return n | 0;
	}
	static half(n) {
		return n * 0.5;
	}
	static quarter(n) {
		return n * 0.25;
	}
	static to_color(n) {
		let this1 = zero_utilities_Color.get();
		let color = n | 0;
		let x = (color >> 16 & 255) / 255;
		let y = (color >> 8 & 255) / 255;
		let z = (color & 255) / 255;
		let w = (color >> 24 & 255) / 255;
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		zero_utilities_Vec4.arr_set(this1,0,zero_utilities_Color.zero(x));
		zero_utilities_Vec4.arr_set(this1,1,zero_utilities_Color.zero(y));
		zero_utilities_Vec4.arr_set(this1,2,zero_utilities_Color.zero(z));
		zero_utilities_Vec4.arr_set(this1,3,zero_utilities_Color.zero(w));
		let out = this1;
		return out;
	}
	static vector_from_angle(a,len) {
		return zero_utilities_Vec2.get(Math.cos(a * (Math.PI / 180)) * len,Math.sin(a * (Math.PI / 180)) * len);
	}
	static rand(n) {
		return Math.sin(n) * 43758.5453123 % 1.0;
	}
	static parse_time(n) {
		let minutes = "" + Math.floor(n / 60);
		let seconds = "" + Math.floor(n % 60);
		let milliseconds = "" + Math.floor(Math.round(n % 1 * Math.pow(10,3)) / Math.pow(10,3) * 100);
		while(seconds.length < 2) seconds = "0" + seconds;
		while(milliseconds.length < 3) milliseconds = "" + milliseconds + "0";
		return "" + minutes + ":" + seconds + "." + milliseconds;
	}
	static fuzzy(n,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		let min = n - n * ratio;
		if(min == null) {
			min = 0;
		}
		let r = 0.0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			r += Math.random();
		}
		r /= 2;
		return min + r * (n + n * ratio - min);
	}
}
zero_extensions_FloatExt.__name__ = true;
class zero_utilities_AStar {
	static get_path(map,options) {
		if(options.mode == null) {
			options.mode = zero_utilities_EAStarMode.CARDINAL_ONLY;
		}
		if(options.simplify == null) {
			options.simplify = zero_utilities_EAStarSimplifyMode.REMOVE_NODES_ON_PATH;
		}
		if(options.heuristic == null) {
			options.heuristic = function(i) {
				return 0;
			};
		}
		if(options.mode == zero_utilities_EAStarMode.DIAGONAL && options.simplify == zero_utilities_EAStarSimplifyMode.LINE_OF_SIGHT_NO_DIAGONAL) {
			options.mode = zero_utilities_EAStarMode.CARDINAL_ONLY;
		}
		let start_node = zero_utilities_AStar.get_node(options.start);
		let end_node = zero_utilities_AStar.get_node(options.end);
		let open = [start_node];
		let closed = [];
		while(open.length > 0) {
			open.sort(zero_utilities_AStar.sort_nodes);
			let current_node = open.shift();
			closed.push(current_node);
			let this1 = current_node.position;
			let p = options.end;
			if(this1[0] == p[0] && this1[1] == p[1]) {
				let path = [];
				let current = current_node;
				while(current != null) {
					path.unshift(current.position);
					current = current.parent;
				}
				let _g = 0;
				while(_g < open.length) {
					let node = open[_g];
					++_g;
					zero_utilities_AStar.destroy_node(node);
				}
				path = zero_utilities_AStar.simplify(path,map,options.simplify,options.passable);
				return path;
			}
			let children = [];
			let new_positions;
			switch(options.mode._hx_index) {
			case 0:
				new_positions = [zero_utilities_IntPoint.from_array_int([0,-1]),zero_utilities_IntPoint.from_array_int([0,1]),zero_utilities_IntPoint.from_array_int([-1,0]),zero_utilities_IntPoint.from_array_int([1,0])];
				break;
			case 1:
				new_positions = [zero_utilities_IntPoint.from_array_int([0,-1]),zero_utilities_IntPoint.from_array_int([0,1]),zero_utilities_IntPoint.from_array_int([-1,0]),zero_utilities_IntPoint.from_array_int([1,0]),zero_utilities_IntPoint.from_array_int([-1,-1]),zero_utilities_IntPoint.from_array_int([1,-1]),zero_utilities_IntPoint.from_array_int([-1,1]),zero_utilities_IntPoint.from_array_int([1,1])];
				break;
			}
			let _g = 0;
			while(_g < new_positions.length) {
				let p = new_positions[_g];
				++_g;
				let node_pos = zero_utilities_IntPoint.add(current_node.position,p);
				if(zero_utilities_AStar.validate_position(node_pos,map,options.passable)) {
					children.push({ position : node_pos, parent : current_node, f : 0, h : 0, g : 0});
				}
			}
			let _g1 = 0;
			while(_g1 < children.length) {
				let node = children[_g1];
				++_g1;
				if(zero_utilities_AStar.in_closed(closed,node)) {
					continue;
				}
				node.g = current_node.g + 1;
				let this1 = zero_utilities_IntPoint.subtract(end_node.position,zero_utilities_IntPoint.from_array_int(node.position));
				node.h = Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1]) + options.heuristic(map[node.position[1]][node.position[0]]);
				node.f = node.g + node.h;
				if(zero_utilities_AStar.in_open(open,node)) {
					continue;
				}
				open.push(node);
			}
		}
		let _g = 0;
		while(_g < open.length) {
			let node = open[_g];
			++_g;
			zero_utilities_AStar.destroy_node(node);
		}
		let _g1 = 0;
		while(_g1 < closed.length) {
			let node = closed[_g1];
			++_g1;
			zero_utilities_AStar.destroy_node(node);
		}
		return [];
	}
	static print(map,path,passable) {
		let node_markers = "①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ";
		let _g = [];
		let _g1 = 0;
		while(_g1 < map.length) {
			let row = map[_g1];
			++_g1;
			let _g2 = [];
			let _g3 = 0;
			while(_g3 < row.length) {
				let i = row[_g3];
				++_g3;
				_g2.push(passable.indexOf(i) >= 0 ? " " : "⬛");
			}
			_g.push(_g2);
		}
		let arr = _g;
		let _g2 = 0;
		let _g3 = path.length;
		while(_g2 < _g3) {
			let i = _g2++;
			arr[path[i][1]][path[i][0]] = node_markers.charAt(i % node_markers.length);
		}
		let _g4 = 0;
		while(_g4 < arr.length) {
			let row = arr[_g4];
			++_g4;
			console.log("zero/utilities/AStar.hx:108:",row.join("."));
		}
	}
	static destroy_node(node) {
		zero_utilities_IntPoint.pool.push(node.position);
		node.position = null;
		node = null;
	}
	static in_closed(closed,node) {
		let _g = 0;
		while(_g < closed.length) {
			let closed_node = closed[_g];
			++_g;
			let this1 = node.position;
			let p = closed_node.position;
			if(this1[0] == p[0] && this1[1] == p[1]) {
				return true;
			}
		}
		return false;
	}
	static in_open(open,node) {
		let _g = 0;
		while(_g < open.length) {
			let open_node = open[_g];
			++_g;
			let this1 = node.position;
			let p = open_node.position;
			if(this1[0] == p[0] && this1[1] == p[1]) {
				if(node.g < open_node.g) {
					open_node.g = node.g;
				}
				return true;
			}
		}
		return false;
	}
	static validate_position(p,map,passable) {
		if(p[1] > 0 && p[0] > 0 && p[1] < map.length && p[0] < map[p[1]].length) {
			return passable.indexOf(map[p[1]][p[0]]) >= 0;
		} else {
			return false;
		}
	}
	static sort_nodes(n1,n2) {
		if(n1.f < n2.f) {
			return -1;
		} else if(n1.f > n2.f) {
			return 1;
		} else {
			return 0;
		}
	}
	static get_node(position,parent) {
		return { position : position, parent : parent, g : 0, h : 0, f : 0};
	}
	static simplify(points,map,mode,passable) {
		switch(mode._hx_index) {
		case 0:
			return points;
		case 1:
			return zero_utilities_AStar.remove_nodes_on_path(points,map);
		case 2:
			return zero_utilities_AStar.los_simplify(points,map,passable);
		case 3:
			return zero_utilities_AStar.los_nd_simplify(points,map,passable);
		}
	}
	static remove_nodes_on_path(points,map) {
		if(points.length <= 1) {
			return points;
		}
		let last = points.shift();
		let next = points.shift();
		let v = zero_utilities_IntPoint.subtract(next,last);
		let out = [last];
		while(points.length > 0) {
			last = next;
			next = points.shift();
			let v2 = zero_utilities_IntPoint.subtract(next,last);
			if(!(v[0] == v2[0] && v[1] == v2[1])) {
				out.push(zero_utilities_IntPoint.get(last[0],last[1]));
			}
			zero_utilities_IntPoint.pool.push(last);
			last = null;
			v = v2;
		}
		out.push(next);
		return out;
	}
	static los_simplify(points,map,passable) {
		let last = points.shift();
		let current = points.shift();
		let next = points.shift();
		let out = [last];
		while(points.length > 0) if(zero_utilities_AStar.los(last,next,map,passable)) {
			let t = current;
			current = next;
			next = points.shift();
			zero_utilities_IntPoint.pool.push(t);
			t = null;
		} else {
			let t = last;
			out.push(current);
			last = current;
			zero_utilities_IntPoint.pool.push(t);
			t = null;
		}
		out.push(next);
		return out;
	}
	static los(p1,p2,map,passable) {
		let d = zero_utilities_IntPoint.subtract(p2,p1);
		let s = zero_utilities_IntPoint.from_array_int([p1[0] < p2[0] ? 1 : -1,p1[1] < p2[1] ? 1 : -1]);
		let next = zero_utilities_IntPoint.add_int(p1,0);
		let dist = Math.sqrt(d[0] * d[0] + d[1] * d[1]);
		while(next[0] != p2[0] || next[1] != p2[1]) {
			if(passable.indexOf(map[next[1]][next[0]]) == -1) {
				zero_utilities_IntPoint.pool.push(d);
				d = null;
				zero_utilities_IntPoint.pool.push(s);
				s = null;
				zero_utilities_IntPoint.pool.push(next);
				next = null;
				return false;
			}
			if(Math.abs(d[1] * (next[0] - p1[0] + s[0]) - d[0] * (next[1] - p1[1])) / dist < 0.5) {
				next[0] += s[0];
			} else if(Math.abs(d[1] * (next[0] - p1[0]) - d[0] * (next[1] - p1[1] + s[1])) / dist < 0.5) {
				next[1] += s[1];
			} else {
				next = zero_utilities_IntPoint.add(next,s);
			}
		}
		zero_utilities_IntPoint.pool.push(d);
		d = null;
		zero_utilities_IntPoint.pool.push(s);
		s = null;
		zero_utilities_IntPoint.pool.push(next);
		next = null;
		return true;
	}
	static los_nd_simplify(points,map,passable) {
		let last = points.shift();
		let current = points.shift();
		let next = points.shift();
		let out = [zero_utilities_IntPoint.get(last[0],last[1])];
		while(points.length > 0) if(zero_utilities_AStar.los_no_diagonal(zero_utilities_IntPoint.get(last[0],last[1]),next,map,passable)) {
			let x = next[0];
			let y = next[1];
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			current[0] = x;
			current[1] = y;
			next = points.shift();
		} else {
			out.push(zero_utilities_IntPoint.get(current[0],current[1]));
			let x = current[0];
			let y = current[1];
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			last[0] = x;
			last[1] = y;
		}
		out.push(zero_utilities_IntPoint.get(next[0],next[1]));
		return out;
	}
	static los_no_diagonal(p1,p2,map,passable) {
		let dx = Math.floor(Math.abs(p2[0] - p1[0]));
		let dy = Math.floor(Math.abs(p2[1] - p1[1]));
		let sx = p1[0] < p2[0] ? 1 : -1;
		let sy = p1[1] < p2[1] ? 1 : -1;
		let err = dx - dy;
		let e2;
		while(!(p1[0] == p2[0] && p1[1] == p2[1])) {
			if(passable.indexOf(map[p1[1]][p1[0]]) == -1) {
				zero_utilities_IntPoint.pool.push(p1);
				p1 = null;
				return false;
			}
			e2 = err * 2;
			if(dy > dx) {
				if(e2 > -dy) {
					err -= dy;
					p1[0] += sx;
				} else if(e2 < dx) {
					err += dx;
					p1[1] += sy;
				}
			} else if(e2 < dx) {
				err += dx;
				p1[1] += sy;
			} else if(e2 > -dy) {
				err -= dy;
				p1[0] += sx;
			}
		}
		zero_utilities_IntPoint.pool.push(p1);
		p1 = null;
		return true;
	}
}
zero_utilities_AStar.__name__ = true;
var zero_utilities_EAStarMode = $hxEnums["zero.utilities.EAStarMode"] = { __ename__:true,__constructs__:null
	,CARDINAL_ONLY: {_hx_name:"CARDINAL_ONLY",_hx_index:0,__enum__:"zero.utilities.EAStarMode",toString:$estr}
	,DIAGONAL: {_hx_name:"DIAGONAL",_hx_index:1,__enum__:"zero.utilities.EAStarMode",toString:$estr}
};
zero_utilities_EAStarMode.__constructs__ = [zero_utilities_EAStarMode.CARDINAL_ONLY,zero_utilities_EAStarMode.DIAGONAL];
var zero_utilities_EAStarSimplifyMode = $hxEnums["zero.utilities.EAStarSimplifyMode"] = { __ename__:true,__constructs__:null
	,NONE: {_hx_name:"NONE",_hx_index:0,__enum__:"zero.utilities.EAStarSimplifyMode",toString:$estr}
	,REMOVE_NODES_ON_PATH: {_hx_name:"REMOVE_NODES_ON_PATH",_hx_index:1,__enum__:"zero.utilities.EAStarSimplifyMode",toString:$estr}
	,LINE_OF_SIGHT: {_hx_name:"LINE_OF_SIGHT",_hx_index:2,__enum__:"zero.utilities.EAStarSimplifyMode",toString:$estr}
	,LINE_OF_SIGHT_NO_DIAGONAL: {_hx_name:"LINE_OF_SIGHT_NO_DIAGONAL",_hx_index:3,__enum__:"zero.utilities.EAStarSimplifyMode",toString:$estr}
};
zero_utilities_EAStarSimplifyMode.__constructs__ = [zero_utilities_EAStarSimplifyMode.NONE,zero_utilities_EAStarSimplifyMode.REMOVE_NODES_ON_PATH,zero_utilities_EAStarSimplifyMode.LINE_OF_SIGHT,zero_utilities_EAStarSimplifyMode.LINE_OF_SIGHT_NO_DIAGONAL];
class zero_utilities_Vec4 {
	static zero(n) {
		if(Math.abs(n) <= zero_utilities_Vec4.epsilon) {
			return 0;
		} else {
			return n;
		}
	}
	static from_array_float(input) {
		return zero_utilities_Vec4.get(input[0],input[1],input[2],input[3]);
	}
	static from_array_int(input) {
		return zero_utilities_Vec4.get(input[0],input[1],input[2],input[3]);
	}
	static arr_set(this1,n,v) {
		if(n < 0 || n > 3) {
			return;
		} else {
			this1[n] = v;
		}
	}
	static arr_get(this1,n) {
		return this1[Math.floor(Math.max(Math.min(n,3),0))];
	}
	static get(x,y,z,w) {
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(zero_utilities_Vec4.pool != null && zero_utilities_Vec4.pool.length > 0) {
			let this1 = zero_utilities_Vec4.pool.shift();
			let x1 = x;
			let y1 = y;
			let z1 = z;
			let w1 = w;
			if(w1 == null) {
				w1 = 0;
			}
			if(z1 == null) {
				z1 = 0;
			}
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			this1[0] = zero_utilities_Vec4.zero(x1);
			this1[1] = zero_utilities_Vec4.zero(y1);
			this1[2] = zero_utilities_Vec4.zero(z1);
			this1[3] = zero_utilities_Vec4.zero(w1);
			return this1;
		} else {
			let x1 = x;
			let y1 = y;
			let z1 = z;
			let w1 = w;
			if(w1 == null) {
				w1 = 0;
			}
			if(z1 == null) {
				z1 = 0;
			}
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			return [x1,y1,z1,w1];
		}
	}
	static put(this1) {
		zero_utilities_Vec4.pool.push(this1);
		this1 = null;
	}
	static _new(x,y,z,w) {
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		return [x,y,z,w];
	}
	static set(this1,x,y,z,w) {
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec4.zero(x);
		this1[1] = zero_utilities_Vec4.zero(y);
		this1[2] = zero_utilities_Vec4.zero(z);
		this1[3] = zero_utilities_Vec4.zero(w);
		return this1;
	}
	static get_x(this1) {
		return this1[0];
	}
	static set_x(this1,v) {
		return this1[0] = v;
	}
	static get_y(this1) {
		return this1[1];
	}
	static set_y(this1,v) {
		return this1[1] = v;
	}
	static get_z(this1) {
		return this1[2];
	}
	static set_z(this1,v) {
		return this1[2] = v;
	}
	static get_w(this1) {
		return this1[3];
	}
	static set_w(this1,v) {
		return this1[3] = v;
	}
	static copy_from(this1,v) {
		let x = v[0];
		let y = v[1];
		let z = v[2];
		let w = v[3];
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec4.zero(x);
		this1[1] = zero_utilities_Vec4.zero(y);
		this1[2] = zero_utilities_Vec4.zero(z);
		this1[3] = zero_utilities_Vec4.zero(w);
		return this1;
	}
	static scale(this1,n) {
		let x = this1[0] * n;
		let y = this1[1] * n;
		let z = this1[2] * n;
		let w = this1[3] * n;
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec4.zero(x);
		this1[1] = zero_utilities_Vec4.zero(y);
		this1[2] = zero_utilities_Vec4.zero(z);
		this1[3] = zero_utilities_Vec4.zero(w);
		return this1;
	}
	static copy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[3]);
	}
	static equals(this1,v) {
		if(this1[0] == v[0] && this1[1] == v[1] && this1[2] == v[2]) {
			return this1[3] == v[3];
		} else {
			return false;
		}
	}
	static toString(this1) {
		return "x: " + this1[0] + " | y: " + this1[1] + " | z: " + this1[2] + " | w: " + this1[3];
	}
	static add(v1,v2) {
		return zero_utilities_Vec4.get(v1[0] + v2[0],v1[1] + v2[1],v1[2] + v2[2],v1[3] + v2[3]);
	}
	static add_f(v,n) {
		return zero_utilities_Vec4.get(v[0] + n,v[1] + n,v[2] + n,v[3] + n);
	}
	static subtract(v1,v2) {
		return zero_utilities_Vec4.get(v1[0] - v2[0],v1[1] - v2[1],v1[2] - v2[2],v1[3] - v2[3]);
	}
	static subtract_f(v,n) {
		return zero_utilities_Vec4.get(v[0] - n,v[1] - n,v[2] - n,v[3] - n);
	}
	static multiply(v1,v2) {
		return zero_utilities_Vec4.get(v1[0] * v2[0],v1[1] * v2[1],v1[2] * v2[2],v1[3] * v2[3]);
	}
	static multiply_f(v,n) {
		return zero_utilities_Vec4.get(v[0] * n,v[1] * n,v[2] * n,v[3] * n);
	}
	static divide(v1,v2) {
		return zero_utilities_Vec4.get(v1[0] / v2[0],v1[1] / v2[1],v1[2] / v2[2],v1[3] / v2[3]);
	}
	static divide_f(v,n) {
		return zero_utilities_Vec4.get(v[0] / n,v[1] / n,v[2] / n,v[3] / n);
	}
	static mod(v1,v2) {
		return zero_utilities_Vec4.get(v1[0] % v2[0],v1[1] % v2[1],v1[2] % v2[2],v1[3] % v2[3]);
	}
	static mod_f(v,n) {
		return zero_utilities_Vec4.get(v[0] % n,v[1] % n,v[2] % n,v[3] % n);
	}
	static get_xx(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[0]);
	}
	static get_xy(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[1]);
	}
	static get_xz(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[2]);
	}
	static get_xw(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[3]);
	}
	static get_yx(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[0]);
	}
	static get_yy(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[1]);
	}
	static get_yz(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[2]);
	}
	static get_yw(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[3]);
	}
	static get_zx(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[0]);
	}
	static get_zy(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[1]);
	}
	static get_zz(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[2]);
	}
	static get_zw(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[3]);
	}
	static get_wx(this1) {
		return zero_utilities_Vec2.get(this1[3],this1[0]);
	}
	static get_wy(this1) {
		return zero_utilities_Vec2.get(this1[3],this1[1]);
	}
	static get_wz(this1) {
		return zero_utilities_Vec2.get(this1[3],this1[2]);
	}
	static get_ww(this1) {
		return zero_utilities_Vec2.get(this1[3],this1[3]);
	}
	static get_xxx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[0]);
	}
	static get_xxy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[1]);
	}
	static get_xxz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[2]);
	}
	static get_xxw(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[3]);
	}
	static get_xyx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[0]);
	}
	static get_xyy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[1]);
	}
	static get_xyz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[2]);
	}
	static get_xyw(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[3]);
	}
	static get_xzx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[0]);
	}
	static get_xzy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[1]);
	}
	static get_xzz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[2]);
	}
	static get_xzw(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[3]);
	}
	static get_xwx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[3],this1[0]);
	}
	static get_xwy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[3],this1[1]);
	}
	static get_xwz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[3],this1[2]);
	}
	static get_xww(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[3],this1[3]);
	}
	static get_yxx(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[0]);
	}
	static get_yxy(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[1]);
	}
	static get_yxz(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[2]);
	}
	static get_yxw(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[3]);
	}
	static get_yyx(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[0]);
	}
	static get_yyy(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[1]);
	}
	static get_yyz(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[2]);
	}
	static get_yyw(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[3]);
	}
	static get_yzx(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[0]);
	}
	static get_yzy(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[1]);
	}
	static get_yzz(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[2]);
	}
	static get_yzw(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[3]);
	}
	static get_ywx(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[3],this1[0]);
	}
	static get_ywy(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[3],this1[1]);
	}
	static get_ywz(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[3],this1[2]);
	}
	static get_yww(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[3],this1[3]);
	}
	static get_zxx(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[0]);
	}
	static get_zxy(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[1]);
	}
	static get_zxz(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[2]);
	}
	static get_zxw(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[3]);
	}
	static get_zyx(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[0]);
	}
	static get_zyy(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[1]);
	}
	static get_zyz(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[2]);
	}
	static get_zyw(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[3]);
	}
	static get_zzx(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[0]);
	}
	static get_zzy(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[1]);
	}
	static get_zzz(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[2]);
	}
	static get_zzw(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[3]);
	}
	static get_zwx(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[3],this1[0]);
	}
	static get_zwy(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[3],this1[1]);
	}
	static get_zwz(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[3],this1[2]);
	}
	static get_zww(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[3],this1[3]);
	}
	static get_wxx(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[0],this1[0]);
	}
	static get_wxy(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[0],this1[1]);
	}
	static get_wxz(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[0],this1[2]);
	}
	static get_wxw(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[0],this1[3]);
	}
	static get_wyx(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[1],this1[0]);
	}
	static get_wyy(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[1],this1[1]);
	}
	static get_wyz(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[1],this1[2]);
	}
	static get_wyw(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[1],this1[3]);
	}
	static get_wzx(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[2],this1[0]);
	}
	static get_wzy(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[2],this1[1]);
	}
	static get_wzz(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[2],this1[2]);
	}
	static get_wzw(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[2],this1[3]);
	}
	static get_wwx(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[3],this1[0]);
	}
	static get_wwy(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[3],this1[1]);
	}
	static get_wwz(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[3],this1[2]);
	}
	static get_www(this1) {
		return zero_utilities_Vec3.get(this1[3],this1[3],this1[3]);
	}
	static get_xxxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[0]);
	}
	static get_xxxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[1]);
	}
	static get_xxxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[2]);
	}
	static get_xxxw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[3]);
	}
	static get_xxyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[0]);
	}
	static get_xxyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[1]);
	}
	static get_xxyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[2]);
	}
	static get_xxyw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[3]);
	}
	static get_xxzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[0]);
	}
	static get_xxzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[1]);
	}
	static get_xxzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[2]);
	}
	static get_xxzw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[3]);
	}
	static get_xxwx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[3],this1[0]);
	}
	static get_xxwy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[3],this1[1]);
	}
	static get_xxwz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[3],this1[2]);
	}
	static get_xxww(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[3],this1[3]);
	}
	static get_xyxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[0]);
	}
	static get_xyxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[1]);
	}
	static get_xyxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[2]);
	}
	static get_xyxw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[3]);
	}
	static get_xyyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[0]);
	}
	static get_xyyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[1]);
	}
	static get_xyyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[2]);
	}
	static get_xyyw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[3]);
	}
	static get_xyzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[0]);
	}
	static get_xyzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[1]);
	}
	static get_xyzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[2]);
	}
	static get_xyzw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[3]);
	}
	static get_xywx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[3],this1[0]);
	}
	static get_xywy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[3],this1[1]);
	}
	static get_xywz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[3],this1[2]);
	}
	static get_xyww(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[3],this1[3]);
	}
	static get_xzxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[0]);
	}
	static get_xzxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[1]);
	}
	static get_xzxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[2]);
	}
	static get_xzxw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[3]);
	}
	static get_xzyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[0]);
	}
	static get_xzyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[1]);
	}
	static get_xzyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[2]);
	}
	static get_xzyw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[3]);
	}
	static get_xzzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[0]);
	}
	static get_xzzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[1]);
	}
	static get_xzzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[2]);
	}
	static get_xzzw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[3]);
	}
	static get_xzwx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[3],this1[0]);
	}
	static get_xzwy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[3],this1[1]);
	}
	static get_xzwz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[3],this1[2]);
	}
	static get_xzww(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[3],this1[3]);
	}
	static get_xwxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[0],this1[0]);
	}
	static get_xwxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[0],this1[1]);
	}
	static get_xwxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[0],this1[2]);
	}
	static get_xwxw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[0],this1[3]);
	}
	static get_xwyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[1],this1[0]);
	}
	static get_xwyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[1],this1[1]);
	}
	static get_xwyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[1],this1[2]);
	}
	static get_xwyw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[1],this1[3]);
	}
	static get_xwzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[2],this1[0]);
	}
	static get_xwzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[2],this1[1]);
	}
	static get_xwzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[2],this1[2]);
	}
	static get_xwzw(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[2],this1[3]);
	}
	static get_xwwx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[3],this1[0]);
	}
	static get_xwwy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[3],this1[1]);
	}
	static get_xwwz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[3],this1[2]);
	}
	static get_xwww(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[3],this1[3],this1[3]);
	}
	static get_yxxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[0]);
	}
	static get_yxxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[1]);
	}
	static get_yxxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[2]);
	}
	static get_yxxw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[3]);
	}
	static get_yxyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[0]);
	}
	static get_yxyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[1]);
	}
	static get_yxyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[2]);
	}
	static get_yxyw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[3]);
	}
	static get_yxzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[0]);
	}
	static get_yxzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[1]);
	}
	static get_yxzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[2]);
	}
	static get_yxzw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[3]);
	}
	static get_yxwx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[3],this1[0]);
	}
	static get_yxwy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[3],this1[1]);
	}
	static get_yxwz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[3],this1[2]);
	}
	static get_yxww(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[3],this1[3]);
	}
	static get_yyxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[0]);
	}
	static get_yyxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[1]);
	}
	static get_yyxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[2]);
	}
	static get_yyxw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[3]);
	}
	static get_yyyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[0]);
	}
	static get_yyyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[1]);
	}
	static get_yyyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[2]);
	}
	static get_yyyw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[3]);
	}
	static get_yyzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[0]);
	}
	static get_yyzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[1]);
	}
	static get_yyzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[2]);
	}
	static get_yyzw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[3]);
	}
	static get_yywx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[3],this1[0]);
	}
	static get_yywy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[3],this1[1]);
	}
	static get_yywz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[3],this1[2]);
	}
	static get_yyww(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[3],this1[3]);
	}
	static get_yzxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[0]);
	}
	static get_yzxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[1]);
	}
	static get_yzxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[2]);
	}
	static get_yzxw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[3]);
	}
	static get_yzyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[0]);
	}
	static get_yzyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[1]);
	}
	static get_yzyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[2]);
	}
	static get_yzyw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[3]);
	}
	static get_yzzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[0]);
	}
	static get_yzzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[1]);
	}
	static get_yzzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[2]);
	}
	static get_yzzw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[3]);
	}
	static get_yzwx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[3],this1[0]);
	}
	static get_yzwy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[3],this1[1]);
	}
	static get_yzwz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[3],this1[2]);
	}
	static get_yzww(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[3],this1[3]);
	}
	static get_ywxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[0],this1[0]);
	}
	static get_ywxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[0],this1[1]);
	}
	static get_ywxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[0],this1[2]);
	}
	static get_ywxw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[0],this1[3]);
	}
	static get_ywyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[1],this1[0]);
	}
	static get_ywyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[1],this1[1]);
	}
	static get_ywyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[1],this1[2]);
	}
	static get_ywyw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[1],this1[3]);
	}
	static get_ywzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[2],this1[0]);
	}
	static get_ywzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[2],this1[1]);
	}
	static get_ywzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[2],this1[2]);
	}
	static get_ywzw(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[2],this1[3]);
	}
	static get_ywwx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[3],this1[0]);
	}
	static get_ywwy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[3],this1[1]);
	}
	static get_ywwz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[3],this1[2]);
	}
	static get_ywww(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[3],this1[3],this1[3]);
	}
	static get_zxxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[0]);
	}
	static get_zxxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[1]);
	}
	static get_zxxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[2]);
	}
	static get_zxxw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[3]);
	}
	static get_zxyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[0]);
	}
	static get_zxyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[1]);
	}
	static get_zxyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[2]);
	}
	static get_zxyw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[3]);
	}
	static get_zxzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[0]);
	}
	static get_zxzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[1]);
	}
	static get_zxzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[2]);
	}
	static get_zxzw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[3]);
	}
	static get_zxwx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[3],this1[0]);
	}
	static get_zxwy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[3],this1[1]);
	}
	static get_zxwz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[3],this1[2]);
	}
	static get_zxww(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[3],this1[3]);
	}
	static get_zyxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[0]);
	}
	static get_zyxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[1]);
	}
	static get_zyxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[2]);
	}
	static get_zyxw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[3]);
	}
	static get_zyyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[0]);
	}
	static get_zyyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[1]);
	}
	static get_zyyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[2]);
	}
	static get_zyyw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[3]);
	}
	static get_zyzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[0]);
	}
	static get_zyzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[1]);
	}
	static get_zyzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[2]);
	}
	static get_zyzw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[3]);
	}
	static get_zywx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[3],this1[0]);
	}
	static get_zywy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[3],this1[1]);
	}
	static get_zywz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[3],this1[2]);
	}
	static get_zyww(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[3],this1[3]);
	}
	static get_zzxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[0]);
	}
	static get_zzxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[1]);
	}
	static get_zzxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[2]);
	}
	static get_zzxw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[3]);
	}
	static get_zzyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[0]);
	}
	static get_zzyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[1]);
	}
	static get_zzyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[2]);
	}
	static get_zzyw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[3]);
	}
	static get_zzzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[0]);
	}
	static get_zzzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[1]);
	}
	static get_zzzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[2]);
	}
	static get_zzzw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[3]);
	}
	static get_zzwx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[3],this1[0]);
	}
	static get_zzwy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[3],this1[1]);
	}
	static get_zzwz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[3],this1[2]);
	}
	static get_zzww(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[3],this1[3]);
	}
	static get_zwxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[0],this1[0]);
	}
	static get_zwxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[0],this1[1]);
	}
	static get_zwxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[0],this1[2]);
	}
	static get_zwxw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[0],this1[3]);
	}
	static get_zwyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[1],this1[0]);
	}
	static get_zwyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[1],this1[1]);
	}
	static get_zwyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[1],this1[2]);
	}
	static get_zwyw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[1],this1[3]);
	}
	static get_zwzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[2],this1[0]);
	}
	static get_zwzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[2],this1[1]);
	}
	static get_zwzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[2],this1[2]);
	}
	static get_zwzw(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[2],this1[3]);
	}
	static get_zwwx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[3],this1[0]);
	}
	static get_zwwy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[3],this1[1]);
	}
	static get_zwwz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[3],this1[2]);
	}
	static get_zwww(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[3],this1[3],this1[3]);
	}
	static get_wxxx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[0],this1[0]);
	}
	static get_wxxy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[0],this1[1]);
	}
	static get_wxxz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[0],this1[2]);
	}
	static get_wxxw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[0],this1[3]);
	}
	static get_wxyx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[1],this1[0]);
	}
	static get_wxyy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[1],this1[1]);
	}
	static get_wxyz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[1],this1[2]);
	}
	static get_wxyw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[1],this1[3]);
	}
	static get_wxzx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[2],this1[0]);
	}
	static get_wxzy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[2],this1[1]);
	}
	static get_wxzz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[2],this1[2]);
	}
	static get_wxzw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[2],this1[3]);
	}
	static get_wxwx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[3],this1[0]);
	}
	static get_wxwy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[3],this1[1]);
	}
	static get_wxwz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[3],this1[2]);
	}
	static get_wxww(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[0],this1[3],this1[3]);
	}
	static get_wyxx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[0],this1[0]);
	}
	static get_wyxy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[0],this1[1]);
	}
	static get_wyxz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[0],this1[2]);
	}
	static get_wyxw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[0],this1[3]);
	}
	static get_wyyx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[1],this1[0]);
	}
	static get_wyyy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[1],this1[1]);
	}
	static get_wyyz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[1],this1[2]);
	}
	static get_wyyw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[1],this1[3]);
	}
	static get_wyzx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[2],this1[0]);
	}
	static get_wyzy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[2],this1[1]);
	}
	static get_wyzz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[2],this1[2]);
	}
	static get_wyzw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[2],this1[3]);
	}
	static get_wywx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[3],this1[0]);
	}
	static get_wywy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[3],this1[1]);
	}
	static get_wywz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[3],this1[2]);
	}
	static get_wyww(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[1],this1[3],this1[3]);
	}
	static get_wzxx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[0],this1[0]);
	}
	static get_wzxy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[0],this1[1]);
	}
	static get_wzxz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[0],this1[2]);
	}
	static get_wzxw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[0],this1[3]);
	}
	static get_wzyx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[1],this1[0]);
	}
	static get_wzyy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[1],this1[1]);
	}
	static get_wzyz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[1],this1[2]);
	}
	static get_wzyw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[1],this1[3]);
	}
	static get_wzzx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[2],this1[0]);
	}
	static get_wzzy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[2],this1[1]);
	}
	static get_wzzz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[2],this1[2]);
	}
	static get_wzzw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[2],this1[3]);
	}
	static get_wzwx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[3],this1[0]);
	}
	static get_wzwy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[3],this1[1]);
	}
	static get_wzwz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[3],this1[2]);
	}
	static get_wzww(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[2],this1[3],this1[3]);
	}
	static get_wwxx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[0],this1[0]);
	}
	static get_wwxy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[0],this1[1]);
	}
	static get_wwxz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[0],this1[2]);
	}
	static get_wwxw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[0],this1[3]);
	}
	static get_wwyx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[1],this1[0]);
	}
	static get_wwyy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[1],this1[1]);
	}
	static get_wwyz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[1],this1[2]);
	}
	static get_wwyw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[1],this1[3]);
	}
	static get_wwzx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[2],this1[0]);
	}
	static get_wwzy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[2],this1[1]);
	}
	static get_wwzz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[2],this1[2]);
	}
	static get_wwzw(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[2],this1[3]);
	}
	static get_wwwx(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[3],this1[0]);
	}
	static get_wwwy(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[3],this1[1]);
	}
	static get_wwwz(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[3],this1[2]);
	}
	static get_wwww(this1) {
		return zero_utilities_Vec4.get(this1[3],this1[3],this1[3],this1[3]);
	}
}
class zero_utilities_Color {
	static zero(n) {
		if(Math.abs(n) <= zero_utilities_Color.epsilon) {
			return 0;
		} else {
			return n;
		}
	}
	static get(red,green,blue,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(blue == null) {
			blue = 0;
		}
		if(green == null) {
			green = 0;
		}
		if(red == null) {
			red = 0;
		}
		if(zero_utilities_Color.pool != null && zero_utilities_Color.pool.length > 0) {
			let this1 = zero_utilities_Color.pool.shift();
			let x = red;
			let y = green;
			let z = blue;
			let w = alpha;
			if(w == null) {
				w = 0;
			}
			if(z == null) {
				z = 0;
			}
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			zero_utilities_Vec4.arr_set(this1,0,zero_utilities_Color.zero(x));
			zero_utilities_Vec4.arr_set(this1,1,zero_utilities_Color.zero(y));
			zero_utilities_Vec4.arr_set(this1,2,zero_utilities_Color.zero(z));
			zero_utilities_Vec4.arr_set(this1,3,zero_utilities_Color.zero(w));
			return this1;
		} else {
			let x = red;
			let y = green;
			let z = blue;
			let w = alpha;
			if(w == null) {
				w = 0;
			}
			if(z == null) {
				z = 0;
			}
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			return zero_utilities_Vec4.from_array_float([x,y,z,w]);
		}
	}
	static put(this1) {
		zero_utilities_Color.pool.push(this1);
		this1 = null;
	}
	static from_array_float(input) {
		return zero_utilities_Color.get(input[0],input[1],input[2],input[3]);
	}
	static from_array_int(input) {
		return zero_utilities_Color.get(input[0],input[1],input[2],input[3]);
	}
	static arr_set(this1,n,v) {
		if(n < 0 || n > 3) {
			return;
		} else {
			zero_utilities_Vec4.arr_set(this1,n,v);
		}
	}
	static arr_get(this1,n) {
		return zero_utilities_Vec4.arr_get(this1,Math.floor(Math.max(Math.min(n,3),0)));
	}
	static get_red(this1) {
		return this1[0];
	}
	static set_red(this1,v) {
		return this1[0] = Math.min(Math.max(v,0),1);
	}
	static get_green(this1) {
		return this1[1];
	}
	static set_green(this1,v) {
		return this1[1] = Math.min(Math.max(v,0),1);
	}
	static get_blue(this1) {
		return this1[2];
	}
	static set_blue(this1,v) {
		return this1[2] = Math.min(Math.max(v,0),1);
	}
	static get_alpha(this1) {
		return this1[3];
	}
	static set_alpha(this1,v) {
		return this1[3] = Math.min(Math.max(v,0),1);
	}
	static get_red_int(this1) {
		return Math.round(this1[0] * 255);
	}
	static set_red_int(this1,v) {
		this1[0] = v / 255;
		return v;
	}
	static get_green_int(this1) {
		return Math.round(this1[1] * 255);
	}
	static set_green_int(this1,v) {
		this1[1] = v / 255;
		return v;
	}
	static get_blue_int(this1) {
		return Math.round(this1[2] * 255);
	}
	static set_blue_int(this1,v) {
		this1[2] = v / 255;
		return v;
	}
	static get_alpha_int(this1) {
		return Math.round(this1[3] * 255);
	}
	static set_alpha_int(this1,v) {
		this1[3] = v / 255;
		return v;
	}
	static get_hue(this1) {
		if(Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) != 0) {
			return (180 / Math.PI * Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) + 360) % 360;
		} else {
			return 0;
		}
	}
	static set_hue(this1,hue) {
		zero_utilities_Color.set_HSL(this1,hue,(Math.max(this1[0],Math.max(this1[1],this1[2])) - Math.min(this1[0],Math.min(this1[1],this1[2]))) / Math.max(this1[0],Math.max(this1[1],this1[2])),(Math.max(this1[0],Math.max(this1[1],this1[2])) + Math.min(this1[0],Math.min(this1[1],this1[2]))) / 2);
		return hue;
	}
	static get_saturation(this1) {
		return (Math.max(this1[0],Math.max(this1[1],this1[2])) - Math.min(this1[0],Math.min(this1[1],this1[2]))) / Math.max(this1[0],Math.max(this1[1],this1[2]));
	}
	static set_saturation(this1,saturation) {
		zero_utilities_Color.set_HSL(this1,Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) != 0 ? (180 / Math.PI * Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) + 360) % 360 : 0,saturation,(Math.max(this1[0],Math.max(this1[1],this1[2])) + Math.min(this1[0],Math.min(this1[1],this1[2]))) / 2);
		return saturation;
	}
	static get_lightness(this1) {
		return (Math.max(this1[0],Math.max(this1[1],this1[2])) + Math.min(this1[0],Math.min(this1[1],this1[2]))) / 2;
	}
	static set_lightness(this1,lightness) {
		zero_utilities_Color.set_HSL(this1,Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) != 0 ? (180 / Math.PI * Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) + 360) % 360 : 0,(Math.max(this1[0],Math.max(this1[1],this1[2])) - Math.min(this1[0],Math.min(this1[1],this1[2]))) / Math.max(this1[0],Math.max(this1[1],this1[2])),lightness);
		return lightness;
	}
	static get_brightness(this1) {
		return Math.max(this1[0],Math.max(this1[1],this1[2]));
	}
	static set_brightness(this1,brightness) {
		zero_utilities_Color.set_HSV(this1,Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) != 0 ? (180 / Math.PI * Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) + 360) % 360 : 0,(Math.max(this1[0],Math.max(this1[1],this1[2])) - Math.min(this1[0],Math.min(this1[1],this1[2]))) / Math.max(this1[0],Math.max(this1[1],this1[2])),brightness);
		return brightness;
	}
	static _new(x,y,z,w) {
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		return zero_utilities_Vec4.from_array_float([x,y,z,w]);
	}
	static set(this1,x,y,z,w) {
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		zero_utilities_Vec4.arr_set(this1,0,zero_utilities_Color.zero(x));
		zero_utilities_Vec4.arr_set(this1,1,zero_utilities_Color.zero(y));
		zero_utilities_Vec4.arr_set(this1,2,zero_utilities_Color.zero(z));
		zero_utilities_Vec4.arr_set(this1,3,zero_utilities_Color.zero(w));
		return this1;
	}
	static max_color(this1) {
		return Math.max(this1[0],Math.max(this1[1],this1[2]));
	}
	static min_color(this1) {
		return Math.min(this1[0],Math.min(this1[1],this1[2]));
	}
	static to_hex(this1) {
		return (Math.round(this1[3] * 255) & 255) << 24 | (Math.round(this1[0] * 255) & 255) << 16 | (Math.round(this1[1] * 255) & 255) << 8 | Math.round(this1[2] * 255) & 255;
	}
	static to_hex_24(this1) {
		return (Math.round(this1[0] * 255) & 255) << 16 | (Math.round(this1[1] * 255) & 255) << 8 | Math.round(this1[2] * 255) & 255;
	}
	static from_int32(this1,color) {
		let x = (color >> 16 & 255) / 255;
		let y = (color >> 8 & 255) / 255;
		let z = (color & 255) / 255;
		let w = (color >> 24 & 255) / 255;
		if(w == null) {
			w = 0;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		zero_utilities_Vec4.arr_set(this1,0,zero_utilities_Color.zero(x));
		zero_utilities_Vec4.arr_set(this1,1,zero_utilities_Color.zero(y));
		zero_utilities_Vec4.arr_set(this1,2,zero_utilities_Color.zero(z));
		zero_utilities_Vec4.arr_set(this1,3,zero_utilities_Color.zero(w));
		return this1;
	}
	static equals(this1,color) {
		if(this1[0] == color[0] && this1[1] == color[1] && this1[2] == color[2]) {
			return this1[3] == color[3];
		} else {
			return false;
		}
	}
	static toString(this1) {
		return "r: " + this1[0] + " | g: " + this1[1] + " | b: " + this1[2] + " | a: " + this1[3] + " | #" + StringTools.hex((Math.round(this1[3] * 255) & 255) << 24 | (Math.round(this1[0] * 255) & 255) << 16 | (Math.round(this1[1] * 255) & 255) << 8 | Math.round(this1[2] * 255) & 255);
	}
	static set_HSL(this1,h,s,l) {
		h /= 360;
		zero_utilities_Color.set_from_hue(this1,h);
		let C = (1 - Math.abs(2 * l - 1)) * s;
		return zero_utilities_Vec4.add_f(zero_utilities_Vec4.multiply_f(zero_utilities_Vec4.subtract_f(this1,0.5),C),l);
	}
	static set_HSV(this1,h,s,v) {
		zero_utilities_Color.set_from_hue(this1,Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) != 0 ? (180 / Math.PI * Math.atan2(Math.sqrt(3) * (this1[1] - this1[2]),2 * this1[0] - this1[1] - this1[2]) + 360) % 360 : 0);
		this1[0] = Math.min(Math.max(((this1[0] - 1) * s + 1) * v,0),1);
		this1[1] = Math.min(Math.max(((this1[1] - 1) * s + 1) * v,0),1);
		this1[2] = Math.min(Math.max(((this1[2] - 1) * s + 1) * v,0),1);
		return this1;
	}
	static set_from_hue(this1,hue) {
		this1[0] = Math.min(Math.max(Math.abs(hue * 6 - 3) - 1,0),1);
		this1[1] = Math.min(Math.max(2 - Math.abs(hue * 6 - 2),0),1);
		this1[2] = Math.min(Math.max(2 - Math.abs(hue * 6 - 4),0),1);
		return this1;
	}
	static add(v1,v2) {
		return zero_utilities_Color.get(v1[0] + v2[0],v1[1] + v2[1],v1[2] + v2[2],v1[3] + v2[3]);
	}
	static add_f(v,n) {
		return zero_utilities_Color.get(v[0] + n,v[1] + n,v[2] + n,v[3] + n);
	}
	static subtract(v1,v2) {
		return zero_utilities_Color.get(v1[0] - v2[0],v1[1] - v2[1],v1[2] - v2[2],v1[3] - v2[3]);
	}
	static subtract_f(v,n) {
		return zero_utilities_Color.get(v[0] - n,v[1] - n,v[2] - n,v[3] - n);
	}
	static multiply(v1,v2) {
		return zero_utilities_Color.get(v1[0] * v2[0],v1[1] * v2[1],v1[2] * v2[2],v1[3] * v2[3]);
	}
	static multiply_f(v,n) {
		return zero_utilities_Color.get(v[0] * n,v[1] * n,v[2] * n,v[3] * n);
	}
	static divide(v1,v2) {
		return zero_utilities_Color.get(v1[0] / v2[0],v1[1] / v2[1],v1[2] / v2[2],v1[3] / v2[3]);
	}
	static divide_f(v,n) {
		return zero_utilities_Color.get(v[0] / n,v[1] / n,v[2] / n,v[3] / n);
	}
	static mod(v1,v2) {
		return zero_utilities_Color.get(v1[0] % v2[0],v1[1] % v2[1],v1[2] % v2[2],v1[3] % v2[3]);
	}
	static mod_f(v,n) {
		return zero_utilities_Color.get(v[0] % n,v[1] % n,v[2] % n,v[3] % n);
	}
	static get_rrr(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[0]);
	}
	static get_rrg(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[1]);
	}
	static get_rrb(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[2]);
	}
	static get_rgr(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[0]);
	}
	static get_rgg(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[1]);
	}
	static get_rgb(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[2]);
	}
	static get_rbr(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[0]);
	}
	static get_rbg(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[1]);
	}
	static get_rbb(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[2]);
	}
	static get_grr(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[0]);
	}
	static get_grg(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[1]);
	}
	static get_grb(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[0],this1[2]);
	}
	static get_ggr(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[0]);
	}
	static get_ggg(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[1]);
	}
	static get_ggb(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[1],this1[2]);
	}
	static get_gbr(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[0]);
	}
	static get_gbg(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[1]);
	}
	static get_gbb(this1) {
		return zero_utilities_Vec3.get(this1[1],this1[2],this1[2]);
	}
	static get_brr(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[0]);
	}
	static get_brg(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[1]);
	}
	static get_brb(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[0],this1[2]);
	}
	static get_bgr(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[0]);
	}
	static get_bgg(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[1]);
	}
	static get_bgb(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[1],this1[2]);
	}
	static get_bbr(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[0]);
	}
	static get_bbg(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[1]);
	}
	static get_bbb(this1) {
		return zero_utilities_Vec3.get(this1[2],this1[2],this1[2]);
	}
	static get_rrrr(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[0],this1[0]);
	}
	static get_rrrg(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[0],this1[1]);
	}
	static get_rrrb(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[0],this1[2]);
	}
	static get_rrra(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[0],this1[3]);
	}
	static get_rrgr(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[1],this1[0]);
	}
	static get_rrgg(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[1],this1[1]);
	}
	static get_rrgb(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[1],this1[2]);
	}
	static get_rrga(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[1],this1[3]);
	}
	static get_rrbr(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[2],this1[0]);
	}
	static get_rrbg(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[2],this1[1]);
	}
	static get_rrbb(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[2],this1[2]);
	}
	static get_rrba(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[2],this1[3]);
	}
	static get_rrar(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[3],this1[0]);
	}
	static get_rrag(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[3],this1[1]);
	}
	static get_rrab(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[3],this1[2]);
	}
	static get_rraa(this1) {
		return zero_utilities_Color.get(this1[0],this1[0],this1[3],this1[3]);
	}
	static get_rgrr(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[0],this1[0]);
	}
	static get_rgrg(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[0],this1[1]);
	}
	static get_rgrb(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[0],this1[2]);
	}
	static get_rgra(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[0],this1[3]);
	}
	static get_rggr(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[1],this1[0]);
	}
	static get_rggg(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[1],this1[1]);
	}
	static get_rggb(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[1],this1[2]);
	}
	static get_rgga(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[1],this1[3]);
	}
	static get_rgbr(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[2],this1[0]);
	}
	static get_rgbg(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[2],this1[1]);
	}
	static get_rgbb(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[2],this1[2]);
	}
	static get_rgba(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[2],this1[3]);
	}
	static get_rgar(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[3],this1[0]);
	}
	static get_rgag(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[3],this1[1]);
	}
	static get_rgab(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[3],this1[2]);
	}
	static get_rgaa(this1) {
		return zero_utilities_Color.get(this1[0],this1[1],this1[3],this1[3]);
	}
	static get_rbrr(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[0],this1[0]);
	}
	static get_rbrg(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[0],this1[1]);
	}
	static get_rbrb(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[0],this1[2]);
	}
	static get_rbra(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[0],this1[3]);
	}
	static get_rbgr(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[1],this1[0]);
	}
	static get_rbgg(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[1],this1[1]);
	}
	static get_rbgb(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[1],this1[2]);
	}
	static get_rbga(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[1],this1[3]);
	}
	static get_rbbr(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[2],this1[0]);
	}
	static get_rbbg(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[2],this1[1]);
	}
	static get_rbbb(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[2],this1[2]);
	}
	static get_rbba(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[2],this1[3]);
	}
	static get_rbar(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[3],this1[0]);
	}
	static get_rbag(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[3],this1[1]);
	}
	static get_rbab(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[3],this1[2]);
	}
	static get_rbaa(this1) {
		return zero_utilities_Color.get(this1[0],this1[2],this1[3],this1[3]);
	}
	static get_rarr(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[0],this1[0]);
	}
	static get_rarg(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[0],this1[1]);
	}
	static get_rarb(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[0],this1[2]);
	}
	static get_rara(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[0],this1[3]);
	}
	static get_ragr(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[1],this1[0]);
	}
	static get_ragg(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[1],this1[1]);
	}
	static get_ragb(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[1],this1[2]);
	}
	static get_raga(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[1],this1[3]);
	}
	static get_rabr(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[2],this1[0]);
	}
	static get_rabg(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[2],this1[1]);
	}
	static get_rabb(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[2],this1[2]);
	}
	static get_raba(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[2],this1[3]);
	}
	static get_raar(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[3],this1[0]);
	}
	static get_raag(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[3],this1[1]);
	}
	static get_raab(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[3],this1[2]);
	}
	static get_raaa(this1) {
		return zero_utilities_Color.get(this1[0],this1[3],this1[3],this1[3]);
	}
	static get_grrr(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[0],this1[0]);
	}
	static get_grrg(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[0],this1[1]);
	}
	static get_grrb(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[0],this1[2]);
	}
	static get_grra(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[0],this1[3]);
	}
	static get_grgr(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[1],this1[0]);
	}
	static get_grgg(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[1],this1[1]);
	}
	static get_grgb(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[1],this1[2]);
	}
	static get_grga(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[1],this1[3]);
	}
	static get_grbr(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[2],this1[0]);
	}
	static get_grbg(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[2],this1[1]);
	}
	static get_grbb(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[2],this1[2]);
	}
	static get_grba(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[2],this1[3]);
	}
	static get_grar(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[3],this1[0]);
	}
	static get_grag(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[3],this1[1]);
	}
	static get_grab(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[3],this1[2]);
	}
	static get_graa(this1) {
		return zero_utilities_Color.get(this1[1],this1[0],this1[3],this1[3]);
	}
	static get_ggrr(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[0],this1[0]);
	}
	static get_ggrg(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[0],this1[1]);
	}
	static get_ggrb(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[0],this1[2]);
	}
	static get_ggra(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[0],this1[3]);
	}
	static get_gggr(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[1],this1[0]);
	}
	static get_gggg(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[1],this1[1]);
	}
	static get_gggb(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[1],this1[2]);
	}
	static get_ggga(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[1],this1[3]);
	}
	static get_ggbr(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[2],this1[0]);
	}
	static get_ggbg(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[2],this1[1]);
	}
	static get_ggbb(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[2],this1[2]);
	}
	static get_ggba(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[2],this1[3]);
	}
	static get_ggar(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[3],this1[0]);
	}
	static get_ggag(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[3],this1[1]);
	}
	static get_ggab(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[3],this1[2]);
	}
	static get_ggaa(this1) {
		return zero_utilities_Color.get(this1[1],this1[1],this1[3],this1[3]);
	}
	static get_gbrr(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[0],this1[0]);
	}
	static get_gbrg(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[0],this1[1]);
	}
	static get_gbrb(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[0],this1[2]);
	}
	static get_gbra(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[0],this1[3]);
	}
	static get_gbgr(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[1],this1[0]);
	}
	static get_gbgg(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[1],this1[1]);
	}
	static get_gbgb(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[1],this1[2]);
	}
	static get_gbga(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[1],this1[3]);
	}
	static get_gbbr(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[2],this1[0]);
	}
	static get_gbbg(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[2],this1[1]);
	}
	static get_gbbb(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[2],this1[2]);
	}
	static get_gbba(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[2],this1[3]);
	}
	static get_gbar(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[3],this1[0]);
	}
	static get_gbag(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[3],this1[1]);
	}
	static get_gbab(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[3],this1[2]);
	}
	static get_gbaa(this1) {
		return zero_utilities_Color.get(this1[1],this1[2],this1[3],this1[3]);
	}
	static get_garr(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[0],this1[0]);
	}
	static get_garg(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[0],this1[1]);
	}
	static get_garb(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[0],this1[2]);
	}
	static get_gara(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[0],this1[3]);
	}
	static get_gagr(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[1],this1[0]);
	}
	static get_gagg(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[1],this1[1]);
	}
	static get_gagb(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[1],this1[2]);
	}
	static get_gaga(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[1],this1[3]);
	}
	static get_gabr(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[2],this1[0]);
	}
	static get_gabg(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[2],this1[1]);
	}
	static get_gabb(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[2],this1[2]);
	}
	static get_gaba(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[2],this1[3]);
	}
	static get_gaar(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[3],this1[0]);
	}
	static get_gaag(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[3],this1[1]);
	}
	static get_gaab(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[3],this1[2]);
	}
	static get_gaaa(this1) {
		return zero_utilities_Color.get(this1[1],this1[3],this1[3],this1[3]);
	}
	static get_brrr(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[0],this1[0]);
	}
	static get_brrg(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[0],this1[1]);
	}
	static get_brrb(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[0],this1[2]);
	}
	static get_brra(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[0],this1[3]);
	}
	static get_brgr(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[1],this1[0]);
	}
	static get_brgg(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[1],this1[1]);
	}
	static get_brgb(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[1],this1[2]);
	}
	static get_brga(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[1],this1[3]);
	}
	static get_brbr(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[2],this1[0]);
	}
	static get_brbg(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[2],this1[1]);
	}
	static get_brbb(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[2],this1[2]);
	}
	static get_brba(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[2],this1[3]);
	}
	static get_brar(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[3],this1[0]);
	}
	static get_brag(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[3],this1[1]);
	}
	static get_brab(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[3],this1[2]);
	}
	static get_braa(this1) {
		return zero_utilities_Color.get(this1[2],this1[0],this1[3],this1[3]);
	}
	static get_bgrr(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[0],this1[0]);
	}
	static get_bgrg(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[0],this1[1]);
	}
	static get_bgrb(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[0],this1[2]);
	}
	static get_bgra(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[0],this1[3]);
	}
	static get_bggr(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[1],this1[0]);
	}
	static get_bggg(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[1],this1[1]);
	}
	static get_bggb(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[1],this1[2]);
	}
	static get_bgga(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[1],this1[3]);
	}
	static get_bgbr(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[2],this1[0]);
	}
	static get_bgbg(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[2],this1[1]);
	}
	static get_bgbb(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[2],this1[2]);
	}
	static get_bgba(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[2],this1[3]);
	}
	static get_bgar(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[3],this1[0]);
	}
	static get_bgag(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[3],this1[1]);
	}
	static get_bgab(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[3],this1[2]);
	}
	static get_bgaa(this1) {
		return zero_utilities_Color.get(this1[2],this1[1],this1[3],this1[3]);
	}
	static get_bbrr(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[0],this1[0]);
	}
	static get_bbrg(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[0],this1[1]);
	}
	static get_bbrb(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[0],this1[2]);
	}
	static get_bbra(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[0],this1[3]);
	}
	static get_bbgr(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[1],this1[0]);
	}
	static get_bbgg(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[1],this1[1]);
	}
	static get_bbgb(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[1],this1[2]);
	}
	static get_bbga(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[1],this1[3]);
	}
	static get_bbbr(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[2],this1[0]);
	}
	static get_bbbg(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[2],this1[1]);
	}
	static get_bbbb(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[2],this1[2]);
	}
	static get_bbba(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[2],this1[3]);
	}
	static get_bbar(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[3],this1[0]);
	}
	static get_bbag(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[3],this1[1]);
	}
	static get_bbab(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[3],this1[2]);
	}
	static get_bbaa(this1) {
		return zero_utilities_Color.get(this1[2],this1[2],this1[3],this1[3]);
	}
	static get_barr(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[0],this1[0]);
	}
	static get_barg(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[0],this1[1]);
	}
	static get_barb(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[0],this1[2]);
	}
	static get_bara(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[0],this1[3]);
	}
	static get_bagr(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[1],this1[0]);
	}
	static get_bagg(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[1],this1[1]);
	}
	static get_bagb(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[1],this1[2]);
	}
	static get_baga(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[1],this1[3]);
	}
	static get_babr(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[2],this1[0]);
	}
	static get_babg(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[2],this1[1]);
	}
	static get_babb(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[2],this1[2]);
	}
	static get_baba(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[2],this1[3]);
	}
	static get_baar(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[3],this1[0]);
	}
	static get_baag(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[3],this1[1]);
	}
	static get_baab(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[3],this1[2]);
	}
	static get_baaa(this1) {
		return zero_utilities_Color.get(this1[2],this1[3],this1[3],this1[3]);
	}
	static get_arrr(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[0],this1[0]);
	}
	static get_arrg(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[0],this1[1]);
	}
	static get_arrb(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[0],this1[2]);
	}
	static get_arra(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[0],this1[3]);
	}
	static get_argr(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[1],this1[0]);
	}
	static get_argg(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[1],this1[1]);
	}
	static get_argb(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[1],this1[2]);
	}
	static get_arga(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[1],this1[3]);
	}
	static get_arbr(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[2],this1[0]);
	}
	static get_arbg(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[2],this1[1]);
	}
	static get_arbb(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[2],this1[2]);
	}
	static get_arba(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[2],this1[3]);
	}
	static get_arar(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[3],this1[0]);
	}
	static get_arag(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[3],this1[1]);
	}
	static get_arab(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[3],this1[2]);
	}
	static get_araa(this1) {
		return zero_utilities_Color.get(this1[3],this1[0],this1[3],this1[3]);
	}
	static get_agrr(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[0],this1[0]);
	}
	static get_agrg(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[0],this1[1]);
	}
	static get_agrb(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[0],this1[2]);
	}
	static get_agra(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[0],this1[3]);
	}
	static get_aggr(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[1],this1[0]);
	}
	static get_aggg(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[1],this1[1]);
	}
	static get_aggb(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[1],this1[2]);
	}
	static get_agga(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[1],this1[3]);
	}
	static get_agbr(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[2],this1[0]);
	}
	static get_agbg(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[2],this1[1]);
	}
	static get_agbb(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[2],this1[2]);
	}
	static get_agba(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[2],this1[3]);
	}
	static get_agar(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[3],this1[0]);
	}
	static get_agag(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[3],this1[1]);
	}
	static get_agab(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[3],this1[2]);
	}
	static get_agaa(this1) {
		return zero_utilities_Color.get(this1[3],this1[1],this1[3],this1[3]);
	}
	static get_abrr(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[0],this1[0]);
	}
	static get_abrg(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[0],this1[1]);
	}
	static get_abrb(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[0],this1[2]);
	}
	static get_abra(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[0],this1[3]);
	}
	static get_abgr(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[1],this1[0]);
	}
	static get_abgg(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[1],this1[1]);
	}
	static get_abgb(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[1],this1[2]);
	}
	static get_abga(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[1],this1[3]);
	}
	static get_abbr(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[2],this1[0]);
	}
	static get_abbg(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[2],this1[1]);
	}
	static get_abbb(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[2],this1[2]);
	}
	static get_abba(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[2],this1[3]);
	}
	static get_abar(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[3],this1[0]);
	}
	static get_abag(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[3],this1[1]);
	}
	static get_abab(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[3],this1[2]);
	}
	static get_abaa(this1) {
		return zero_utilities_Color.get(this1[3],this1[2],this1[3],this1[3]);
	}
	static get_aarr(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[0],this1[0]);
	}
	static get_aarg(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[0],this1[1]);
	}
	static get_aarb(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[0],this1[2]);
	}
	static get_aara(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[0],this1[3]);
	}
	static get_aagr(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[1],this1[0]);
	}
	static get_aagg(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[1],this1[1]);
	}
	static get_aagb(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[1],this1[2]);
	}
	static get_aaga(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[1],this1[3]);
	}
	static get_aabr(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[2],this1[0]);
	}
	static get_aabg(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[2],this1[1]);
	}
	static get_aabb(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[2],this1[2]);
	}
	static get_aaba(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[2],this1[3]);
	}
	static get_aaar(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[3],this1[0]);
	}
	static get_aaag(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[3],this1[1]);
	}
	static get_aaab(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[3],this1[2]);
	}
	static get_aaaa(this1) {
		return zero_utilities_Color.get(this1[3],this1[3],this1[3],this1[3]);
	}
}
class zero_utilities_Vec2 {
	static get(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(zero_utilities_Vec2.pool.length > 0) {
			return zero_utilities_Vec2.set(zero_utilities_Vec2.pool.shift(),x,y);
		}
		return zero_utilities_Vec2._new(x,y);
	}
	static zero(v) {
		if(Math.abs(v) <= 1e-8) {
			return 0;
		} else {
			return v;
		}
	}
	static _new(x,y) {
		return [Math.atan2(y,x),Math.sqrt(x * x + y * y)];
	}
	static set(this1,x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		zero_utilities_Vec2.set_length(this1,Math.sqrt(x * x + y * y));
		zero_utilities_Vec2.set_radians(this1,Math.atan2(y,x));
		return this1;
	}
	static put(this1) {
		this1 = [];
		zero_utilities_Vec2.pool.push(this1);
	}
	static normalize(this1) {
		return zero_utilities_Vec2.set(this1,zero_utilities_Vec2.get_x(this1) / zero_utilities_Vec2.get_length(this1),zero_utilities_Vec2.get_y(this1) / zero_utilities_Vec2.get_length(this1));
	}
	static scale(this1,scalar) {
		return zero_utilities_Vec2.set(this1,zero_utilities_Vec2.get_x(this1) * scalar,zero_utilities_Vec2.get_y(this1) * scalar);
	}
	static dot(this1,v) {
		return zero_utilities_Vec2.zero(zero_utilities_Vec2.get_x(this1) * zero_utilities_Vec2.get_x(v) + zero_utilities_Vec2.get_y(this1) * zero_utilities_Vec2.get_y(v));
	}
	static cross(this1,v) {
		return zero_utilities_Vec2.zero(zero_utilities_Vec2.get_x(this1) * zero_utilities_Vec2.get_y(v) - zero_utilities_Vec2.get_y(this1) * zero_utilities_Vec2.get_x(v));
	}
	static distance(this1,v) {
		return Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(this1) - zero_utilities_Vec2.get_x(v),2) + Math.pow(zero_utilities_Vec2.get_y(this1) - zero_utilities_Vec2.get_y(v),2));
	}
	static rad_between(this1,v) {
		return Math.atan2(zero_utilities_Vec2.get_y(v) - zero_utilities_Vec2.get_y(this1),zero_utilities_Vec2.get_x(v) - zero_utilities_Vec2.get_x(this1));
	}
	static deg_between(this1,v) {
		return Math.atan2(zero_utilities_Vec2.get_y(v) - zero_utilities_Vec2.get_y(this1),zero_utilities_Vec2.get_x(v) - zero_utilities_Vec2.get_x(this1)) * (180 / Math.PI);
	}
	static angle_between(this1,v) {
		if(zero_utilities_Vec2.use_radians) {
			return Math.atan2(zero_utilities_Vec2.get_y(v) - zero_utilities_Vec2.get_y(this1),zero_utilities_Vec2.get_x(v) - zero_utilities_Vec2.get_x(this1));
		} else {
			return Math.atan2(zero_utilities_Vec2.get_y(v) - zero_utilities_Vec2.get_y(this1),zero_utilities_Vec2.get_x(v) - zero_utilities_Vec2.get_x(this1)) * (180 / Math.PI);
		}
	}
	static in_circle(this1,cx,cy,cr) {
		return Math.sqrt(Math.pow(zero_utilities_Vec2.get_x(this1) - cx,2) + Math.pow(zero_utilities_Vec2.get_y(this1) - cy,2)) <= cr;
	}
	static copy_from(this1,v) {
		return zero_utilities_Vec2.set(this1,zero_utilities_Vec2.get_x(v),zero_utilities_Vec2.get_y(v));
	}
	static copy(this1) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(this1),zero_utilities_Vec2.get_y(this1));
	}
	static toString(this1) {
		return "x:" + zero_utilities_Vec2.get_x(this1) + ", y:" + zero_utilities_Vec2.get_y(this1) + ", length:" + zero_utilities_Vec2.get_length(this1) + ", angle:" + zero_utilities_Vec2.get_angle(this1);
	}
	static get_radians(this1) {
		return this1[0];
	}
	static get_length(this1) {
		return Math.abs(this1[1]);
	}
	static get_x(this1) {
		return zero_utilities_Vec2.zero(zero_utilities_Vec2.get_length(this1) * Math.cos(zero_utilities_Vec2.get_radians(this1)));
	}
	static get_y(this1) {
		return zero_utilities_Vec2.zero(zero_utilities_Vec2.get_length(this1) * Math.sin(zero_utilities_Vec2.get_radians(this1)));
	}
	static get_angle(this1) {
		if(zero_utilities_Vec2.use_radians) {
			return zero_utilities_Vec2.get_radians(this1);
		} else {
			return zero_utilities_Vec2.get_degrees(this1);
		}
	}
	static get_degrees(this1) {
		return zero_utilities_Vec2.get_radians(this1) * (180 / Math.PI);
	}
	static set_radians(this1,v) {
		return this1[0] = v;
	}
	static set_length(this1,v) {
		if(v < 0.0) {
			zero_utilities_Vec2.set_radians(this1,zero_utilities_Vec2.get_radians(this1) + Math.PI);
		}
		return this1[1] = Math.abs(v);
	}
	static set_x(this1,v) {
		if(this1[2] == v) {
			return v;
		}
		this1[2] = v;
		let y = zero_utilities_Vec2.get_y(this1);
		zero_utilities_Vec2.set_length(this1,Math.sqrt(v * v + y * y));
		zero_utilities_Vec2.set_radians(this1,Math.atan2(y,v));
		return v;
	}
	static set_y(this1,v) {
		if(this1[3] == v) {
			return v;
		}
		this1[3] = v;
		let x = zero_utilities_Vec2.get_x(this1);
		zero_utilities_Vec2.set_length(this1,Math.sqrt(x * x + v * v));
		zero_utilities_Vec2.set_radians(this1,Math.atan2(v,x));
		return v;
	}
	static set_degrees(this1,v) {
		zero_utilities_Vec2.set_radians(this1,v * (Math.PI / 180));
		return v;
	}
	static set_angle(this1,v) {
		zero_utilities_Vec2.set_radians(this1,zero_utilities_Vec2.use_radians ? v : v * (Math.PI / 180));
		return v;
	}
	static add(v1,v2) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(v1) + zero_utilities_Vec2.get_x(v2),zero_utilities_Vec2.get_y(v1) + zero_utilities_Vec2.get_y(v2));
	}
	static subtract(v1,v2) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(v1) - zero_utilities_Vec2.get_x(v2),zero_utilities_Vec2.get_y(v1) - zero_utilities_Vec2.get_y(v2));
	}
	static dot_product(v1,v2) {
		return zero_utilities_Vec2.zero(zero_utilities_Vec2.get_x(v1) * zero_utilities_Vec2.get_x(v2) + zero_utilities_Vec2.get_y(v1) * zero_utilities_Vec2.get_y(v2));
	}
	static cross_product(v1,v2) {
		return zero_utilities_Vec2.zero(zero_utilities_Vec2.get_x(v1) * zero_utilities_Vec2.get_y(v2) - zero_utilities_Vec2.get_y(v1) * zero_utilities_Vec2.get_x(v2));
	}
	static is_equal(v1,v2) {
		if(zero_utilities_Vec2.get_radians(v1) == zero_utilities_Vec2.get_radians(v2)) {
			return zero_utilities_Vec2.get_length(v1) == zero_utilities_Vec2.get_length(v2);
		} else {
			return false;
		}
	}
	static add_float(v1,f) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(v1) + f,zero_utilities_Vec2.get_y(v1) + f);
	}
	static subtract_float(v1,f) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(v1) - f,zero_utilities_Vec2.get_y(v1) - f);
	}
	static multiply_float(v1,f) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(v1) * f,zero_utilities_Vec2.get_y(v1) * f);
	}
	static divide_float(v1,f) {
		return zero_utilities_Vec2.get(zero_utilities_Vec2.get_x(v1) / f,zero_utilities_Vec2.get_y(v1) / f);
	}
}
class zero_utilities_Vec3 {
	static zero(n) {
		if(Math.abs(n) <= zero_utilities_Vec3.epsilon) {
			return 0;
		} else {
			return n;
		}
	}
	static from_array_float(input) {
		return zero_utilities_Vec3.get(input[0],input[1],input[2]);
	}
	static from_array_int(input) {
		return zero_utilities_Vec3.get(input[0],input[1],input[2]);
	}
	static arr_set(this1,n,v) {
		if(n < 0 || n > 2) {
			return;
		} else {
			this1[n] = v;
		}
	}
	static arr_get(this1,n) {
		return this1[Math.floor(Math.max(Math.min(n,2),0))];
	}
	static get(x,y,z) {
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(zero_utilities_Vec3.pool != null && zero_utilities_Vec3.pool.length > 0) {
			let this1 = zero_utilities_Vec3.pool.pop();
			let x1 = x;
			let y1 = y;
			let z1 = z;
			if(z1 == null) {
				z1 = 0;
			}
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			this1[0] = zero_utilities_Vec3.zero(x1);
			this1[1] = zero_utilities_Vec3.zero(y1);
			this1[2] = zero_utilities_Vec3.zero(z1);
			return this1;
		}
		let x1 = x;
		let y1 = y;
		let z1 = z;
		if(z1 == null) {
			z1 = 0;
		}
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		return [x1,y1,z1];
	}
	static put(this1) {
		zero_utilities_Vec3.pool.push(zero_utilities_Vec3.from_array_float(this1));
		this1 = null;
	}
	static _new(x,y,z) {
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		return [x,y,z];
	}
	static set(this1,x,y,z) {
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec3.zero(x);
		this1[1] = zero_utilities_Vec3.zero(y);
		this1[2] = zero_utilities_Vec3.zero(z);
		return this1;
	}
	static get_x(this1) {
		return this1[0];
	}
	static set_x(this1,v) {
		return this1[0] = v;
	}
	static get_y(this1) {
		return this1[1];
	}
	static set_y(this1,v) {
		return this1[1] = v;
	}
	static get_z(this1) {
		return this1[2];
	}
	static set_z(this1,v) {
		return this1[2] = v;
	}
	static get_length(this1) {
		return Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2]);
	}
	static set_length(this1,v) {
		let n = 1 / Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2]);
		let x = this1[0] * n;
		let y = this1[1] * n;
		let z = this1[2] * n;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec3.zero(x);
		this1[1] = zero_utilities_Vec3.zero(y);
		this1[2] = zero_utilities_Vec3.zero(z);
		let x1 = this1[0] * v;
		let y1 = this1[1] * v;
		let z1 = this1[2] * v;
		if(z1 == null) {
			z1 = 0;
		}
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		this1[0] = zero_utilities_Vec3.zero(x1);
		this1[1] = zero_utilities_Vec3.zero(y1);
		this1[2] = zero_utilities_Vec3.zero(z1);
		return v;
	}
	static copy_from(this1,v) {
		let x = v[0];
		let y = v[1];
		let z = v[2];
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec3.zero(x);
		this1[1] = zero_utilities_Vec3.zero(y);
		this1[2] = zero_utilities_Vec3.zero(z);
		return this1;
	}
	static scale(this1,n) {
		let x = this1[0] * n;
		let y = this1[1] * n;
		let z = this1[2] * n;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec3.zero(x);
		this1[1] = zero_utilities_Vec3.zero(y);
		this1[2] = zero_utilities_Vec3.zero(z);
		return this1;
	}
	static normalize(this1) {
		let n = 1 / Math.sqrt(this1[0] * this1[0] + this1[1] * this1[1] + this1[2] * this1[2]);
		let x = this1[0] * n;
		let y = this1[1] * n;
		let z = this1[2] * n;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this1[0] = zero_utilities_Vec3.zero(x);
		this1[1] = zero_utilities_Vec3.zero(y);
		this1[2] = zero_utilities_Vec3.zero(z);
		return this1;
	}
	static copy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[2]);
	}
	static equals(this1,v) {
		if(this1[0] == v[0] && this1[1] == v[1]) {
			return this1[2] == v[2];
		} else {
			return false;
		}
	}
	static to_hex(this1) {
		return (Math.round(this1[0] * 255) & 255) << 16 | (Math.round(this1[1] * 255) & 255) << 8 | Math.round(this1[2] * 255) & 255;
	}
	static toString(this1) {
		return "x: " + this1[0] + " | y: " + this1[1] + " | z: " + this1[2];
	}
	static dot(this1,v) {
		return this1[0] * v[0] + this1[1] * v[1] + this1[2] * v[2];
	}
	static cross(this1,v) {
		return zero_utilities_Vec3.get(this1[1] * v[2] - this1[2] * v[1],this1[2] * v[0] - this1[0] * v[2],this1[0] * v[1] - this1[1] * v[0]);
	}
	static distance(this1,v) {
		return Math.sqrt(Math.pow(v.x - this1[0],2) + Math.pow(v.y - this1[1],2) + Math.pow(v.z - this1[2],2));
	}
	static add(v1,v2) {
		return zero_utilities_Vec3.get(v1[0] + v2[0],v1[1] + v2[1],v1[2] + v2[2]);
	}
	static add_f(v,n) {
		return zero_utilities_Vec3.get(v[0] + n,v[1] + n,v[2] + n);
	}
	static subtract(v1,v2) {
		return zero_utilities_Vec3.get(v1[0] - v2[0],v1[1] - v2[1],v1[2] - v2[2]);
	}
	static subtract_f(v,n) {
		return zero_utilities_Vec3.get(v[0] - n,v[1] - n,v[2] - n);
	}
	static multiply(v1,v2) {
		return zero_utilities_Vec3.get(v1[0] * v2[0],v1[1] * v2[1],v1[2] * v2[2]);
	}
	static multiply_f(v,n) {
		return zero_utilities_Vec3.get(v[0] * n,v[1] * n,v[2] * n);
	}
	static divide(v1,v2) {
		return zero_utilities_Vec3.get(v1[0] / v2[0],v1[1] / v2[1],v1[2] / v2[2]);
	}
	static divide_f(v,n) {
		return zero_utilities_Vec3.get(v[0] / n,v[1] / n,v[2] / n);
	}
	static mod(v1,v2) {
		return zero_utilities_Vec3.get(v1[0] % v2[0],v1[1] % v2[1],v1[2] % v2[2]);
	}
	static mod_f(v,n) {
		return zero_utilities_Vec3.get(v[0] % n,v[1] % n,v[2] % n);
	}
	static get_xx(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[0]);
	}
	static get_xy(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[1]);
	}
	static get_xz(this1) {
		return zero_utilities_Vec2.get(this1[0],this1[2]);
	}
	static get_yx(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[0]);
	}
	static get_yy(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[1]);
	}
	static get_yz(this1) {
		return zero_utilities_Vec2.get(this1[1],this1[2]);
	}
	static get_zx(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[0]);
	}
	static get_zy(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[1]);
	}
	static get_zz(this1) {
		return zero_utilities_Vec2.get(this1[2],this1[2]);
	}
	static get_xxx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[0]);
	}
	static get_xxy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[1]);
	}
	static get_xxz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[2]);
	}
	static get_xyx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[0]);
	}
	static get_xyy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[1]);
	}
	static get_xyz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[2]);
	}
	static get_xzx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[0]);
	}
	static get_xzy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[1]);
	}
	static get_xzz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[2]);
	}
	static get_yxx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[0]);
	}
	static get_yxy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[1]);
	}
	static get_yxz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[2]);
	}
	static get_yyx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[0]);
	}
	static get_yyy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[1]);
	}
	static get_yyz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[2]);
	}
	static get_yzx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[0]);
	}
	static get_yzy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[1]);
	}
	static get_yzz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[2]);
	}
	static get_zxx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[0]);
	}
	static get_zxy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[1]);
	}
	static get_zxz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[0],this1[2]);
	}
	static get_zyx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[0]);
	}
	static get_zyy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[1]);
	}
	static get_zyz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[1],this1[2]);
	}
	static get_zzx(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[0]);
	}
	static get_zzy(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[1]);
	}
	static get_zzz(this1) {
		return zero_utilities_Vec3.get(this1[0],this1[2],this1[2]);
	}
	static get_xxxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[0]);
	}
	static get_xxxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[1]);
	}
	static get_xxxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[0],this1[2]);
	}
	static get_xxyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[0]);
	}
	static get_xxyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[1]);
	}
	static get_xxyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[1],this1[2]);
	}
	static get_xxzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[0]);
	}
	static get_xxzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[1]);
	}
	static get_xxzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[0],this1[2],this1[2]);
	}
	static get_xyxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[0]);
	}
	static get_xyxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[1]);
	}
	static get_xyxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[0],this1[2]);
	}
	static get_xyyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[0]);
	}
	static get_xyyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[1]);
	}
	static get_xyyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[1],this1[2]);
	}
	static get_xyzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[0]);
	}
	static get_xyzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[1]);
	}
	static get_xyzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[1],this1[2],this1[2]);
	}
	static get_xzxx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[0]);
	}
	static get_xzxy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[1]);
	}
	static get_xzxz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[0],this1[2]);
	}
	static get_xzyx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[0]);
	}
	static get_xzyy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[1]);
	}
	static get_xzyz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[1],this1[2]);
	}
	static get_xzzx(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[0]);
	}
	static get_xzzy(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[1]);
	}
	static get_xzzz(this1) {
		return zero_utilities_Vec4.get(this1[0],this1[2],this1[2],this1[2]);
	}
	static get_yxxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[0]);
	}
	static get_yxxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[1]);
	}
	static get_yxxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[0],this1[2]);
	}
	static get_yxyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[0]);
	}
	static get_yxyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[1]);
	}
	static get_yxyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[1],this1[2]);
	}
	static get_yxzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[0]);
	}
	static get_yxzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[1]);
	}
	static get_yxzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[0],this1[2],this1[2]);
	}
	static get_yyxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[0]);
	}
	static get_yyxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[1]);
	}
	static get_yyxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[0],this1[2]);
	}
	static get_yyyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[0]);
	}
	static get_yyyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[1]);
	}
	static get_yyyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[1],this1[2]);
	}
	static get_yyzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[0]);
	}
	static get_yyzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[1]);
	}
	static get_yyzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[1],this1[2],this1[2]);
	}
	static get_yzxx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[0]);
	}
	static get_yzxy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[1]);
	}
	static get_yzxz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[0],this1[2]);
	}
	static get_yzyx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[0]);
	}
	static get_yzyy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[1]);
	}
	static get_yzyz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[1],this1[2]);
	}
	static get_yzzx(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[0]);
	}
	static get_yzzy(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[1]);
	}
	static get_yzzz(this1) {
		return zero_utilities_Vec4.get(this1[1],this1[2],this1[2],this1[2]);
	}
	static get_zxxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[0]);
	}
	static get_zxxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[1]);
	}
	static get_zxxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[0],this1[2]);
	}
	static get_zxyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[0]);
	}
	static get_zxyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[1]);
	}
	static get_zxyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[1],this1[2]);
	}
	static get_zxzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[0]);
	}
	static get_zxzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[1]);
	}
	static get_zxzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[0],this1[2],this1[2]);
	}
	static get_zyxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[0]);
	}
	static get_zyxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[1]);
	}
	static get_zyxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[0],this1[2]);
	}
	static get_zyyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[0]);
	}
	static get_zyyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[1]);
	}
	static get_zyyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[1],this1[2]);
	}
	static get_zyzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[0]);
	}
	static get_zyzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[1]);
	}
	static get_zyzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[1],this1[2],this1[2]);
	}
	static get_zzxx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[0]);
	}
	static get_zzxy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[1]);
	}
	static get_zzxz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[0],this1[2]);
	}
	static get_zzyx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[0]);
	}
	static get_zzyy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[1]);
	}
	static get_zzyz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[1],this1[2]);
	}
	static get_zzzx(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[0]);
	}
	static get_zzzy(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[1]);
	}
	static get_zzzz(this1) {
		return zero_utilities_Vec4.get(this1[2],this1[2],this1[2],this1[2]);
	}
}
{
	String.__name__ = true;
	Array.__name__ = true;
	Date.__name__ = "Date";
}
js_Boot.__toStr = ({ }).toString;
zero_utilities_IntPoint.pool = [];
Util.directions = [zero_utilities_IntPoint.get(1,0),zero_utilities_IntPoint.get(1,1),zero_utilities_IntPoint.get(0,1),zero_utilities_IntPoint.get(-1,1),zero_utilities_IntPoint.get(-1,0),zero_utilities_IntPoint.get(-1,-1),zero_utilities_IntPoint.get(0,-1),zero_utilities_IntPoint.get(1,-1)];
zero_utilities_Vec4.epsilon = 1e-8;
zero_utilities_Vec4.pool = [];
zero_utilities_Color.RED = zero_utilities_Color.from_array_int([1,0,0,1]);
zero_utilities_Color.YELLOW = zero_utilities_Color.from_array_int([1,1,0,1]);
zero_utilities_Color.GREEN = zero_utilities_Color.from_array_int([0,1,0,1]);
zero_utilities_Color.CYAN = zero_utilities_Color.from_array_int([0,1,1,1]);
zero_utilities_Color.BLUE = zero_utilities_Color.from_array_int([0,0,1,1]);
zero_utilities_Color.MAGENTA = zero_utilities_Color.from_array_int([1,0,1,1]);
zero_utilities_Color.WHITE = zero_utilities_Color.from_array_int([1,1,1,1]);
zero_utilities_Color.BLACK = zero_utilities_Color.from_array_int([0,0,0,1]);
zero_utilities_Color.TRANSPARENT = zero_utilities_Color.from_array_int([1,1,1,0]);
zero_utilities_Color.GREY = zero_utilities_Color.from_array_float([0.5,0.5,0.5,1]);
zero_utilities_Color.PICO_8_BLACK = zero_utilities_Color.from_array_int([0,0,0,1]);
zero_utilities_Color.PICO_8_DARK_BLUE = zero_utilities_Color.from_array_float([0.11372549019607843,0.168627450980392168,0.325490196078431382,1]);
zero_utilities_Color.PICO_8_DARK_PURPLE = zero_utilities_Color.from_array_float([0.49411764705882355,0.145098039215686286,0.325490196078431382,1]);
zero_utilities_Color.PICO_8_DARK_GREEN = zero_utilities_Color.from_array_float([0,0.529411764705882359,0.317647058823529393,1]);
zero_utilities_Color.PICO_8_BROWN = zero_utilities_Color.from_array_float([0.670588235294117596,0.321568627450980415,0.211764705882352938,1]);
zero_utilities_Color.PICO_8_DARK_GREY = zero_utilities_Color.from_array_float([0.372549019607843146,0.341176470588235303,0.309803921568627461,1]);
zero_utilities_Color.PICO_8_LIGHT_GREY = zero_utilities_Color.from_array_float([0.760784313725490158,0.764705882352941124,0.780392156862745101,1]);
zero_utilities_Color.PICO_8_WHITE = zero_utilities_Color.from_array_float([1,0.945098039215686248,0.909803921568627438,1]);
zero_utilities_Color.PICO_8_RED = zero_utilities_Color.from_array_float([1,0,0.301960784313725472,1]);
zero_utilities_Color.PICO_8_ORANGE = zero_utilities_Color.from_array_float([1,0.639215686274509753,0,1]);
zero_utilities_Color.PICO_8_YELLOW = zero_utilities_Color.from_array_float([1,0.925490196078431415,0.152941176470588247,1]);
zero_utilities_Color.PICO_8_GREEN = zero_utilities_Color.from_array_float([0,0.894117647058823573,0.211764705882352938,1]);
zero_utilities_Color.PICO_8_BLUE = zero_utilities_Color.from_array_float([0.160784313725490208,0.67843137254901964,1,1]);
zero_utilities_Color.PICO_8_INDIGO = zero_utilities_Color.from_array_float([0.513725490196078383,0.462745098039215708,0.611764705882353,1]);
zero_utilities_Color.PICO_8_PINK = zero_utilities_Color.from_array_float([1,0.466666666666666674,0.658823529411764697,1]);
zero_utilities_Color.PICO_8_PEACH = zero_utilities_Color.from_array_float([1,0.8,0.66666666666666663,1]);
zero_utilities_Color.PALETTE = new haxe_ds_StringMap();
zero_utilities_Color.epsilon = 1e-8;
zero_utilities_Color.pool = [];
zero_utilities_Vec2.pool = [];
zero_utilities_Vec2.UP = zero_utilities_Vec2.get(0,-1);
zero_utilities_Vec2.DOWN = zero_utilities_Vec2.get(0,1);
zero_utilities_Vec2.LEFT = zero_utilities_Vec2.get(-1,0);
zero_utilities_Vec2.RIGHT = zero_utilities_Vec2.get(1,0);
zero_utilities_Vec2.use_radians = false;
zero_utilities_Vec3.epsilon = 1e-8;
zero_utilities_Vec3.pool = [];
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
